/* stylelint-disable declaration-no-important, font-weight-notation
 -- This code comes from outside, and icon-fonts should be prioritary/special
 */
/* stylelint-enable declaration-no-important, font-weight-notation */
/* stylelint-disable order/order -- vars required for mixin */
/* stylelint-enable order/order */
/* stylelint-disable scss/media-feature-value-dollar-variable -- We need to have a 1px delta */
/* stylelint-disable -- copied and pasted reset */
/* The following variables can be configured when using the library */
/* Custom property and class names */
/* Number of columns */
/* Grid gap */
/* Library definitions start here */
@media screen and (min-width: 801px) {
  :root {
    --columns: 14;
    --column-width: calc((100vw - (14 + 1) * 1rem) / 14);
  }
}
:root {
  --columns: 8;
  --column-width: calc((100vw - (8 + 1) * 1rem) / 8);
  --gap: 1rem;
}

.grid {
  display: grid;
  gap: var(--gap);
  grid-template-columns: repeat(var(--columns), 1fr);
}

.container {
  grid-column: 1/-1;
}

.section.padded {
  padding: 0 var(--gap);
}

.dense {
  grid-auto-flow: row dense;
}

.manual {
  min-width: calc(var(--column-width) * var(--columns) + var(--gap) * (var(--columns) - 1));
  width: calc(var(--column-width) * var(--columns) + var(--gap) * (var(--columns) - 1));
}

.manual-mobile-only {
  min-width: calc(var(--column-width) * var(--columns) + var(--gap) * (var(--columns) - 1));
  width: calc(var(--column-width) * var(--columns) + var(--gap) * (var(--columns) - 1));
}
@media screen and (min-width: 801px) {
  .manual-mobile-only {
    min-width: unset;
    width: unset;
  }
}

.start-1 {
  grid-column-start: 1;
}

.span-1 {
  --columns: 1;
  grid-column-end: span 1;
}

.start-2 {
  grid-column-start: 2;
}

.span-2 {
  --columns: 2;
  grid-column-end: span 2;
}

.start-3 {
  grid-column-start: 3;
}

.span-3 {
  --columns: 3;
  grid-column-end: span 3;
}

.start-4 {
  grid-column-start: 4;
}

.span-4 {
  --columns: 4;
  grid-column-end: span 4;
}

.start-5 {
  grid-column-start: 5;
}

.span-5 {
  --columns: 5;
  grid-column-end: span 5;
}

.start-6 {
  grid-column-start: 6;
}

.span-6 {
  --columns: 6;
  grid-column-end: span 6;
}

.start-7 {
  grid-column-start: 7;
}

.span-7 {
  --columns: 7;
  grid-column-end: span 7;
}

.start-8 {
  grid-column-start: 8;
}

.span-8 {
  --columns: 8;
  grid-column-end: span 8;
}

@media screen and (min-width: 801px) {
  .md-start-1 {
    grid-column-start: 1;
  }
  .md-span-1 {
    --columns: 1;
    grid-column-end: span 1;
  }
}
@media screen and (min-width: 801px) {
  .md-start-2 {
    grid-column-start: 2;
  }
  .md-span-2 {
    --columns: 2;
    grid-column-end: span 2;
  }
}
@media screen and (min-width: 801px) {
  .md-start-3 {
    grid-column-start: 3;
  }
  .md-span-3 {
    --columns: 3;
    grid-column-end: span 3;
  }
}
@media screen and (min-width: 801px) {
  .md-start-4 {
    grid-column-start: 4;
  }
  .md-span-4 {
    --columns: 4;
    grid-column-end: span 4;
  }
}
@media screen and (min-width: 801px) {
  .md-start-5 {
    grid-column-start: 5;
  }
  .md-span-5 {
    --columns: 5;
    grid-column-end: span 5;
  }
}
@media screen and (min-width: 801px) {
  .md-start-6 {
    grid-column-start: 6;
  }
  .md-span-6 {
    --columns: 6;
    grid-column-end: span 6;
  }
}
@media screen and (min-width: 801px) {
  .md-start-7 {
    grid-column-start: 7;
  }
  .md-span-7 {
    --columns: 7;
    grid-column-end: span 7;
  }
}
@media screen and (min-width: 801px) {
  .md-start-8 {
    grid-column-start: 8;
  }
  .md-span-8 {
    --columns: 8;
    grid-column-end: span 8;
  }
}
@media screen and (min-width: 801px) {
  .md-start-9 {
    grid-column-start: 9;
  }
  .md-span-9 {
    --columns: 9;
    grid-column-end: span 9;
  }
}
@media screen and (min-width: 801px) {
  .md-start-10 {
    grid-column-start: 10;
  }
  .md-span-10 {
    --columns: 10;
    grid-column-end: span 10;
  }
}
@media screen and (min-width: 801px) {
  .md-start-11 {
    grid-column-start: 11;
  }
  .md-span-11 {
    --columns: 11;
    grid-column-end: span 11;
  }
}
@media screen and (min-width: 801px) {
  .md-start-12 {
    grid-column-start: 12;
  }
  .md-span-12 {
    --columns: 12;
    grid-column-end: span 12;
  }
}
@media screen and (min-width: 801px) {
  .md-start-13 {
    grid-column-start: 13;
  }
  .md-span-13 {
    --columns: 13;
    grid-column-end: span 13;
  }
}
@media screen and (min-width: 801px) {
  .md-start-14 {
    grid-column-start: 14;
  }
  .md-span-14 {
    --columns: 14;
    grid-column-end: span 14;
  }
}
/*
$colorscheme-light-shadow-color:monochrome.$base-grey;
$colorscheme-light-extras:(
  "shadow":.2em .2em .5em rgba(
    red($colorscheme-light-shadow-color),
    blue($colorscheme-light-shadow-color),
    green($colorscheme-light-shadow-color),
    .8
  ),
);

$colorscheme-iceberg-shadow-color:monochrome.$base-grey;
$colorscheme-iceberg-extras:(
  "shadow-hover":0 0 4em rgba(
    red($colorscheme-iceberg-shadow-color),
    blue($colorscheme-iceberg-shadow-color),
    green($colorscheme-iceberg-shadow-color),
    .2
  ),
);
*/
/*
$colorscheme-light-shadow-color:monochrome.$base-grey;
$colorscheme-light-extras:(
  "shadow":.2em .2em .5em rgba(
    red($colorscheme-light-shadow-color),
    blue($colorscheme-light-shadow-color),
    green($colorscheme-light-shadow-color),
    .8
  ),
);

$colorscheme-iceberg-shadow-color:monochrome.$base-grey;
$colorscheme-iceberg-extras:(
  "shadow-hover":0 0 4em rgba(
    red($colorscheme-iceberg-shadow-color),
    blue($colorscheme-iceberg-shadow-color),
    green($colorscheme-iceberg-shadow-color),
    .2
  ),
);
*/
/* 1 - Palette transforms
 *
 * These functions compute the derived hard and soft nuances from the base color
 * i
 */
/*! from alphabet-scss */
.red,
.h-red:focus,
.h-red:hover {
  --color: var(--red);
  --hard-color: var(--hard-red);
  --soft-color: var(--soft-red);
  --on-color: var(--on-red);
}

.orange,
.h-orange:focus,
.h-orange:hover {
  --color: var(--orange);
  --hard-color: var(--hard-orange);
  --soft-color: var(--soft-orange);
  --on-color: var(--on-orange);
}

.yellow,
.h-yellow:focus,
.h-yellow:hover {
  --color: var(--yellow);
  --hard-color: var(--hard-yellow);
  --soft-color: var(--soft-yellow);
  --on-color: var(--on-yellow);
}

.olive,
.h-olive:focus,
.h-olive:hover {
  --color: var(--olive);
  --hard-color: var(--hard-olive);
  --soft-color: var(--soft-olive);
  --on-color: var(--on-olive);
}

.green,
.h-green:focus,
.h-green:hover {
  --color: var(--green);
  --hard-color: var(--hard-green);
  --soft-color: var(--soft-green);
  --on-color: var(--on-green);
}

.indigo,
.h-indigo:focus,
.h-indigo:hover {
  --color: var(--indigo);
  --hard-color: var(--hard-indigo);
  --soft-color: var(--soft-indigo);
  --on-color: var(--on-indigo);
}

.azure,
.h-azure:focus,
.h-azure:hover {
  --color: var(--azure);
  --hard-color: var(--hard-azure);
  --soft-color: var(--soft-azure);
  --on-color: var(--on-azure);
}

.blue,
.h-blue:focus,
.h-blue:hover {
  --color: var(--blue);
  --hard-color: var(--hard-blue);
  --soft-color: var(--soft-blue);
  --on-color: var(--on-blue);
}

.violet,
.h-violet:focus,
.h-violet:hover {
  --color: var(--violet);
  --hard-color: var(--hard-violet);
  --soft-color: var(--soft-violet);
  --on-color: var(--on-violet);
}

.pink,
.h-pink:focus,
.h-pink:hover {
  --color: var(--pink);
  --hard-color: var(--hard-pink);
  --soft-color: var(--soft-pink);
  --on-color: var(--on-pink);
}

:root,
.light-theme {
  --red: #f8333c;
  --hard-red: #f3000b;
  --soft-red: #f37076;
  --on-red: #000000;
  --orange: #f46036;
  --hard-orange: #f03602;
  --soft-orange: #f08e72;
  --on-orange: #000000;
  --yellow: #ffbf00;
  --hard-yellow: #c79500;
  --soft-yellow: #f6c941;
  --on-yellow: #000000;
  --olive: #a1c181;
  --hard-olive: #85b950;
  --soft-olive: #bdcead;
  --on-olive: #000000;
  --green: #44af69;
  --hard-green: #2c8f4e;
  --soft-green: #71ba8a;
  --on-green: #000000;
  --indigo: #43aa8b;
  --hard-indigo: #2b8a6d;
  --soft-indigo: #6db8a1;
  --on-indigo: #000000;
  --azure: #03c9bc;
  --hard-azure: #00948a;
  --soft-azure: #14f0e2;
  --on-azure: #000000;
  --blue: #1f4684;
  --hard-blue: #102d5b;
  --soft-blue: #3460a8;
  --on-blue: #000000;
  --violet: #9381ff;
  --hard-violet: #6349ff;
  --soft-violet: #c5bcfc;
  --on-violet: #ffffff;
  --pink: #e56399;
  --hard-pink: #e82878;
  --soft-pink: #e799b9;
  --on-pink: #000000;
}

.dark-theme {
  --red: #fe011c;
  --hard-red: #c70015;
  --soft-red: #f54255;
  --on-red: #000000;
  --orange: #f46036;
  --hard-orange: #f03602;
  --soft-orange: #f08e72;
  --on-orange: #000000;
  --yellow: #ffbf00;
  --hard-yellow: #c79500;
  --soft-yellow: #f6c941;
  --on-yellow: #000000;
  --olive: #a1c181;
  --hard-olive: #85b950;
  --soft-olive: #bdcead;
  --on-olive: #000000;
  --green: #44af69;
  --hard-green: #2c8f4e;
  --soft-green: #71ba8a;
  --on-green: #000000;
  --indigo: #43aa8b;
  --hard-indigo: #2b8a6d;
  --soft-indigo: #6db8a1;
  --on-indigo: #000000;
  --azure: #03c9bc;
  --hard-azure: #00948a;
  --soft-azure: #14f0e2;
  --on-azure: #000000;
  --blue: #1f4684;
  --hard-blue: #102d5b;
  --soft-blue: #3460a8;
  --on-blue: #000000;
  --violet: #9381ff;
  --hard-violet: #6349ff;
  --soft-violet: #c5bcfc;
  --on-violet: #ffffff;
  --pink: #e56399;
  --hard-pink: #e82878;
  --soft-pink: #e799b9;
  --on-pink: #000000;
  --primary: #213a8f;
  --hard-primary: #112567;
  --soft-primary: #3652b2;
  --on-primary: #000000;
  --secondary: #ff947a;
  --hard-secondary: #ff6742;
  --soft-secondary: #fcc3b6;
  --on-secondary: #000000;
  --accent1: #32f9e1;
  --hard-accent1: #00f3d6;
  --soft-accent1: #6ff4e4;
  --on-accent1: #000000;
  --accent2: #ee4266;
  --hard-accent2: #ef0939;
  --soft-accent2: #ec7c94;
  --on-accent2: #000000;
  --accent3: #fc60a8;
  --hard-accent3: #ff258a;
  --soft-accent3: #f89cc6;
  --on-accent3: #000000;
}

/*# sourceMappingURL=main.css.map */

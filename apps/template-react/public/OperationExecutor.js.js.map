{"version":3,"file":"OperationExecutor.js.js?a51d2","mappings":"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","sources":["webpack://@aztlan/template-react/../../node_modules/relay-runtime/lib/store/OperationExecutor.js"],"sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar RelayObservable = require('../network/RelayObservable');\nvar generateID = require('../util/generateID');\nvar getOperation = require('../util/getOperation');\nvar RelayError = require('../util/RelayError');\nvar RelayFeatureFlags = require('../util/RelayFeatureFlags');\nvar stableCopy = require('../util/stableCopy');\nvar withDuration = require('../util/withDuration');\nvar _require = require('./ClientID'),\n  generateClientID = _require.generateClientID,\n  generateUniqueClientID = _require.generateUniqueClientID;\nvar _require2 = require('./RelayConcreteVariables'),\n  getLocalVariables = _require2.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayModernSelector'),\n  createNormalizationSelector = _require3.createNormalizationSelector,\n  createReaderSelector = _require3.createReaderSelector;\nvar RelayRecordSource = require('./RelayRecordSource');\nvar _require4 = require('./RelayStoreUtils'),\n  ROOT_TYPE = _require4.ROOT_TYPE,\n  TYPENAME_KEY = _require4.TYPENAME_KEY,\n  getStorageKey = _require4.getStorageKey;\nvar invariant = require('invariant');\nvar warning = require(\"fbjs/lib/warning\");\nfunction execute(config) {\n  return new Executor(config);\n}\nvar Executor = /*#__PURE__*/function () {\n  function Executor(_ref2) {\n    var _this = this;\n    var actorIdentifier = _ref2.actorIdentifier,\n      getDataID = _ref2.getDataID,\n      getPublishQueue = _ref2.getPublishQueue,\n      getStore = _ref2.getStore,\n      isClientPayload = _ref2.isClientPayload,\n      operation = _ref2.operation,\n      operationExecutions = _ref2.operationExecutions,\n      operationLoader = _ref2.operationLoader,\n      operationTracker = _ref2.operationTracker,\n      optimisticConfig = _ref2.optimisticConfig,\n      scheduler = _ref2.scheduler,\n      shouldProcessClientComponents = _ref2.shouldProcessClientComponents,\n      sink = _ref2.sink,\n      source = _ref2.source,\n      treatMissingFieldsAsNull = _ref2.treatMissingFieldsAsNull,\n      updater = _ref2.updater,\n      log = _ref2.log,\n      normalizeResponse = _ref2.normalizeResponse;\n    this._actorIdentifier = actorIdentifier;\n    this._getDataID = getDataID;\n    this._treatMissingFieldsAsNull = treatMissingFieldsAsNull;\n    this._incrementalPayloadsPending = false;\n    this._incrementalResults = new Map();\n    this._log = log;\n    this._executeId = generateID();\n    this._nextSubscriptionId = 0;\n    this._operation = operation;\n    this._operationExecutions = operationExecutions;\n    this._operationLoader = operationLoader;\n    this._operationTracker = operationTracker;\n    this._operationUpdateEpochs = new Map();\n    this._optimisticUpdates = null;\n    this._pendingModulePayloadsCount = 0;\n    this._getPublishQueue = getPublishQueue;\n    this._scheduler = scheduler;\n    this._sink = sink;\n    this._source = new Map();\n    this._state = 'started';\n    this._getStore = getStore;\n    this._subscriptions = new Map();\n    this._updater = updater;\n    this._isClientPayload = isClientPayload === true;\n    this._isSubscriptionOperation = this._operation.request.node.params.operationKind === 'subscription';\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n    this._retainDisposables = new Map();\n    this._seenActors = new Set();\n    this._completeFns = [];\n    this._normalizeResponse = normalizeResponse;\n    var id = this._nextSubscriptionId++;\n    source.subscribe({\n      complete: function complete() {\n        return _this._complete(id);\n      },\n      error: function error(_error2) {\n        return _this._error(_error2);\n      },\n      next: function next(response) {\n        try {\n          _this._next(id, response);\n        } catch (error) {\n          sink.error(error);\n        }\n      },\n      start: function start(subscription) {\n        var _this$_operation$requ;\n        _this._start(id, subscription);\n        _this._log({\n          name: 'execute.start',\n          executeId: _this._executeId,\n          params: _this._operation.request.node.params,\n          variables: _this._operation.request.variables,\n          cacheConfig: (_this$_operation$requ = _this._operation.request.cacheConfig) !== null && _this$_operation$requ !== void 0 ? _this$_operation$requ : {}\n        });\n      }\n    });\n    if (optimisticConfig != null) {\n      this._processOptimisticResponse(optimisticConfig.response != null ? {\n        data: optimisticConfig.response\n      } : null, optimisticConfig.updater, false);\n    }\n  }\n  var _proto = Executor.prototype;\n  _proto.cancel = function cancel() {\n    var _this2 = this;\n    if (this._state === 'completed') {\n      return;\n    }\n    this._state = 'completed';\n    this._operationExecutions[\"delete\"](this._operation.request.identifier);\n    if (this._subscriptions.size !== 0) {\n      this._subscriptions.forEach(function (sub) {\n        return sub.unsubscribe();\n      });\n      this._subscriptions.clear();\n    }\n    var optimisticUpdates = this._optimisticUpdates;\n    if (optimisticUpdates !== null) {\n      this._optimisticUpdates = null;\n      optimisticUpdates.forEach(function (update) {\n        return _this2._getPublishQueueAndSaveActor().revertUpdate(update);\n      });\n      this._runPublishQueue();\n    }\n    this._incrementalResults.clear();\n    if (this._asyncStoreUpdateDisposable != null) {\n      this._asyncStoreUpdateDisposable.dispose();\n      this._asyncStoreUpdateDisposable = null;\n    }\n    this._completeFns = [];\n    this._completeOperationTracker();\n    this._disposeRetainedData();\n  };\n  _proto._updateActiveState = function _updateActiveState() {\n    var activeState;\n    switch (this._state) {\n      case 'started':\n        {\n          activeState = 'active';\n          break;\n        }\n      case 'loading_incremental':\n        {\n          activeState = 'active';\n          break;\n        }\n      case 'completed':\n        {\n          activeState = 'inactive';\n          break;\n        }\n      case 'loading_final':\n        {\n          activeState = this._pendingModulePayloadsCount > 0 ? 'active' : 'inactive';\n          break;\n        }\n      default:\n        this._state;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: invalid executor state.') : invariant(false) : void 0;\n    }\n    this._operationExecutions.set(this._operation.request.identifier, activeState);\n  };\n  _proto._schedule = function _schedule(task) {\n    var _this3 = this;\n    var scheduler = this._scheduler;\n    if (scheduler != null) {\n      var id = this._nextSubscriptionId++;\n      RelayObservable.create(function (sink) {\n        var cancellationToken = scheduler.schedule(function () {\n          try {\n            task();\n            sink.complete();\n          } catch (error) {\n            sink.error(error);\n          }\n        });\n        return function () {\n          return scheduler.cancel(cancellationToken);\n        };\n      }).subscribe({\n        complete: function complete() {\n          return _this3._complete(id);\n        },\n        error: function error(_error3) {\n          return _this3._error(_error3);\n        },\n        start: function start(subscription) {\n          return _this3._start(id, subscription);\n        }\n      });\n    } else {\n      task();\n    }\n  };\n  _proto._complete = function _complete(id) {\n    this._subscriptions[\"delete\"](id);\n    if (this._subscriptions.size === 0) {\n      this.cancel();\n      this._sink.complete();\n      this._log({\n        name: 'execute.complete',\n        executeId: this._executeId\n      });\n    }\n  };\n  _proto._error = function _error(error) {\n    this.cancel();\n    this._sink.error(error);\n    this._log({\n      name: 'execute.error',\n      executeId: this._executeId,\n      error: error\n    });\n  };\n  _proto._start = function _start(id, subscription) {\n    this._subscriptions.set(id, subscription);\n    this._updateActiveState();\n  };\n  _proto._next = function _next(_id, response) {\n    var _this4 = this;\n    this._schedule(function () {\n      var _withDuration = withDuration(function () {\n          _this4._handleNext(response);\n          _this4._maybeCompleteSubscriptionOperationTracking();\n        }),\n        duration = _withDuration[0];\n      _this4._log({\n        name: 'execute.next',\n        executeId: _this4._executeId,\n        response: response,\n        duration: duration\n      });\n    });\n  };\n  _proto._handleErrorResponse = function _handleErrorResponse(responses) {\n    var _this5 = this;\n    var results = [];\n    responses.forEach(function (response) {\n      if (response.data === null && response.extensions != null && !response.hasOwnProperty('errors')) {\n        return;\n      } else if (response.data == null) {\n        var errors = response.hasOwnProperty('errors') && response.errors != null ? response.errors : null;\n        var messages = errors ? errors.map(function (_ref3) {\n          var message = _ref3.message;\n          return message;\n        }).join('\\n') : '(No errors)';\n        var error = RelayError.create('RelayNetwork', 'No data returned for operation `' + _this5._operation.request.node.params.name + '`, got error(s):\\n' + messages + '\\n\\nSee the error `source` property for more information.');\n        error.source = {\n          errors: errors,\n          operation: _this5._operation.request.node,\n          variables: _this5._operation.request.variables\n        };\n        error.stack;\n        throw error;\n      } else {\n        var responseWithData = response;\n        results.push(responseWithData);\n      }\n    });\n    return results;\n  };\n  _proto._handleOptimisticResponses = function _handleOptimisticResponses(responses) {\n    var _response$extensions;\n    if (responses.length > 1) {\n      if (responses.some(function (responsePart) {\n        var _responsePart$extensi;\n        return ((_responsePart$extensi = responsePart.extensions) === null || _responsePart$extensi === void 0 ? void 0 : _responsePart$extensi.isOptimistic) === true;\n      })) {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Optimistic responses cannot be batched.') : invariant(false) : void 0;\n      }\n      return false;\n    }\n    var response = responses[0];\n    var isOptimistic = ((_response$extensions = response.extensions) === null || _response$extensions === void 0 ? void 0 : _response$extensions.isOptimistic) === true;\n    if (isOptimistic && this._state !== 'started') {\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: optimistic payload received after server payload.') : invariant(false) : void 0;\n    }\n    if (isOptimistic) {\n      this._processOptimisticResponse(response, null, this._treatMissingFieldsAsNull);\n      this._sink.next(response);\n      return true;\n    }\n    return false;\n  };\n  _proto._handleNext = function _handleNext(response) {\n    if (this._state === 'completed') {\n      return;\n    }\n    this._seenActors.clear();\n    var responses = Array.isArray(response) ? response : [response];\n    var responsesWithData = this._handleErrorResponse(responses);\n    if (responsesWithData.length === 0) {\n      var isFinal = responses.some(function (x) {\n        var _x$extensions;\n        return ((_x$extensions = x.extensions) === null || _x$extensions === void 0 ? void 0 : _x$extensions.is_final) === true;\n      });\n      if (isFinal) {\n        this._state = 'loading_final';\n        this._updateActiveState();\n        this._incrementalPayloadsPending = false;\n      }\n      this._sink.next(response);\n      return;\n    }\n    var isOptimistic = this._handleOptimisticResponses(responsesWithData);\n    if (isOptimistic) {\n      return;\n    }\n    var _partitionGraphQLResp = partitionGraphQLResponses(responsesWithData),\n      nonIncrementalResponses = _partitionGraphQLResp[0],\n      incrementalResponses = _partitionGraphQLResp[1];\n    var hasNonIncrementalResponses = nonIncrementalResponses.length > 0;\n    if (hasNonIncrementalResponses) {\n      if (this._isSubscriptionOperation) {\n        var nextID = generateUniqueClientID();\n        this._operation = {\n          request: this._operation.request,\n          fragment: createReaderSelector(this._operation.fragment.node, nextID, this._operation.fragment.variables, this._operation.fragment.owner),\n          root: createNormalizationSelector(this._operation.root.node, nextID, this._operation.root.variables)\n        };\n      }\n      var payloadFollowups = this._processResponses(nonIncrementalResponses);\n      this._processPayloadFollowups(payloadFollowups);\n    }\n    if (incrementalResponses.length > 0) {\n      var _payloadFollowups = this._processIncrementalResponses(incrementalResponses);\n      this._processPayloadFollowups(_payloadFollowups);\n    }\n    if (this._isSubscriptionOperation) {\n      if (responsesWithData[0].extensions == null) {\n        responsesWithData[0].extensions = {\n          __relay_subscription_root_id: this._operation.fragment.dataID\n        };\n      } else {\n        responsesWithData[0].extensions.__relay_subscription_root_id = this._operation.fragment.dataID;\n      }\n    }\n    var updatedOwners = this._runPublishQueue(hasNonIncrementalResponses ? this._operation : undefined);\n    if (hasNonIncrementalResponses) {\n      if (this._incrementalPayloadsPending) {\n        this._retainData();\n      }\n    }\n    this._updateOperationTracker(updatedOwners);\n    this._sink.next(response);\n  };\n  _proto._processOptimisticResponse = function _processOptimisticResponse(response, updater, treatMissingFieldsAsNull) {\n    var _this6 = this;\n    !(this._optimisticUpdates === null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: environment.execute: only support one optimistic response per ' + 'execute.') : invariant(false) : void 0;\n    if (response == null && updater == null) {\n      return;\n    }\n    var optimisticUpdates = [];\n    if (response) {\n      var payload = this._normalizeResponse(response, this._operation.root, ROOT_TYPE, {\n        actorIdentifier: this._actorIdentifier,\n        getDataID: this._getDataID,\n        path: [],\n        shouldProcessClientComponents: this._shouldProcessClientComponents,\n        treatMissingFieldsAsNull: treatMissingFieldsAsNull\n      });\n      validateOptimisticResponsePayload(payload);\n      optimisticUpdates.push({\n        operation: this._operation,\n        payload: payload,\n        updater: updater\n      });\n      this._processOptimisticFollowups(payload, optimisticUpdates);\n    } else if (updater) {\n      optimisticUpdates.push({\n        operation: this._operation,\n        payload: {\n          errors: null,\n          fieldPayloads: null,\n          incrementalPlaceholders: null,\n          followupPayloads: null,\n          source: RelayRecordSource.create(),\n          isFinal: false\n        },\n        updater: updater\n      });\n    }\n    this._optimisticUpdates = optimisticUpdates;\n    optimisticUpdates.forEach(function (update) {\n      return _this6._getPublishQueueAndSaveActor().applyUpdate(update);\n    });\n    var updatedOwners = this._runPublishQueue();\n    if (RelayFeatureFlags.ENABLE_OPERATION_TRACKER_OPTIMISTIC_UPDATES) {\n      this._updateOperationTracker(updatedOwners);\n    }\n  };\n  _proto._processOptimisticFollowups = function _processOptimisticFollowups(payload, optimisticUpdates) {\n    if (payload.followupPayloads && payload.followupPayloads.length) {\n      var followupPayloads = payload.followupPayloads;\n      var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(followupPayloads),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var followupPayload = _step.value;\n          switch (followupPayload.kind) {\n            case 'ModuleImportPayload':\n              var operationLoader = this._expectOperationLoader();\n              var operation = operationLoader.get(followupPayload.operationReference);\n              if (operation == null) {\n                this._processAsyncOptimisticModuleImport(followupPayload);\n              } else {\n                var moduleImportOptimisticUpdates = this._processOptimisticModuleImport(operation, followupPayload);\n                optimisticUpdates.push.apply(optimisticUpdates, (0, _toConsumableArray2[\"default\"])(moduleImportOptimisticUpdates));\n              }\n              break;\n            case 'ActorPayload':\n              process.env.NODE_ENV !== \"production\" ? warning(false, 'OperationExecutor: Unexpected optimistic ActorPayload. These updates are not supported.') : void 0;\n              break;\n            default:\n              followupPayload;\n              !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unexpected followup kind `%s`. when processing optimistic updates.', followupPayload.kind) : invariant(false) : void 0;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  };\n  _proto._normalizeFollowupPayload = function _normalizeFollowupPayload(followupPayload, normalizationNode) {\n    var variables;\n    if (normalizationNode.kind === 'SplitOperation' && followupPayload.kind === 'ModuleImportPayload') {\n      variables = getLocalVariables(followupPayload.variables, normalizationNode.argumentDefinitions, followupPayload.args);\n    } else {\n      variables = followupPayload.variables;\n    }\n    var selector = createNormalizationSelector(normalizationNode, followupPayload.dataID, variables);\n    return this._normalizeResponse({\n      data: followupPayload.data\n    }, selector, followupPayload.typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: followupPayload.path,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n  };\n  _proto._processOptimisticModuleImport = function _processOptimisticModuleImport(normalizationRootNode, moduleImportPayload) {\n    var operation = getOperation(normalizationRootNode);\n    var optimisticUpdates = [];\n    var modulePayload = this._normalizeFollowupPayload(moduleImportPayload, operation);\n    validateOptimisticResponsePayload(modulePayload);\n    optimisticUpdates.push({\n      operation: this._operation,\n      payload: modulePayload,\n      updater: null\n    });\n    this._processOptimisticFollowups(modulePayload, optimisticUpdates);\n    return optimisticUpdates;\n  };\n  _proto._processAsyncOptimisticModuleImport = function _processAsyncOptimisticModuleImport(moduleImportPayload) {\n    var _this7 = this;\n    this._expectOperationLoader().load(moduleImportPayload.operationReference).then(function (operation) {\n      if (operation == null || _this7._state !== 'started') {\n        return;\n      }\n      var moduleImportOptimisticUpdates = _this7._processOptimisticModuleImport(operation, moduleImportPayload);\n      moduleImportOptimisticUpdates.forEach(function (update) {\n        return _this7._getPublishQueueAndSaveActor().applyUpdate(update);\n      });\n      if (_this7._optimisticUpdates == null) {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'OperationExecutor: Unexpected ModuleImport optimistic ' + 'update in operation %s.' + _this7._operation.request.node.params.name) : void 0;\n      } else {\n        var _this$_optimisticUpda;\n        (_this$_optimisticUpda = _this7._optimisticUpdates).push.apply(_this$_optimisticUpda, (0, _toConsumableArray2[\"default\"])(moduleImportOptimisticUpdates));\n        _this7._runPublishQueue();\n      }\n    });\n  };\n  _proto._processResponses = function _processResponses(responses) {\n    var _this8 = this;\n    if (this._optimisticUpdates !== null) {\n      this._optimisticUpdates.forEach(function (update) {\n        _this8._getPublishQueueAndSaveActor().revertUpdate(update);\n      });\n      this._optimisticUpdates = null;\n    }\n    this._incrementalPayloadsPending = false;\n    this._incrementalResults.clear();\n    this._source.clear();\n    return responses.map(function (payloadPart) {\n      var relayPayload = _this8._normalizeResponse(payloadPart, _this8._operation.root, ROOT_TYPE, {\n        actorIdentifier: _this8._actorIdentifier,\n        getDataID: _this8._getDataID,\n        path: [],\n        treatMissingFieldsAsNull: _this8._treatMissingFieldsAsNull,\n        shouldProcessClientComponents: _this8._shouldProcessClientComponents\n      });\n      _this8._getPublishQueueAndSaveActor().commitPayload(_this8._operation, relayPayload, _this8._updater);\n      return relayPayload;\n    });\n  };\n  _proto._processPayloadFollowups = function _processPayloadFollowups(payloads) {\n    var _this9 = this;\n    if (this._state === 'completed') {\n      return;\n    }\n    payloads.forEach(function (payload) {\n      var incrementalPlaceholders = payload.incrementalPlaceholders,\n        followupPayloads = payload.followupPayloads,\n        isFinal = payload.isFinal;\n      _this9._state = isFinal ? 'loading_final' : 'loading_incremental';\n      _this9._updateActiveState();\n      if (isFinal) {\n        _this9._incrementalPayloadsPending = false;\n      }\n      if (followupPayloads && followupPayloads.length !== 0) {\n        followupPayloads.forEach(function (followupPayload) {\n          var _followupPayload$acto;\n          var prevActorIdentifier = _this9._actorIdentifier;\n          _this9._actorIdentifier = (_followupPayload$acto = followupPayload.actorIdentifier) !== null && _followupPayload$acto !== void 0 ? _followupPayload$acto : _this9._actorIdentifier;\n          _this9._processFollowupPayload(followupPayload);\n          _this9._actorIdentifier = prevActorIdentifier;\n        });\n      }\n      if (incrementalPlaceholders && incrementalPlaceholders.length !== 0) {\n        _this9._incrementalPayloadsPending = _this9._state !== 'loading_final';\n        incrementalPlaceholders.forEach(function (incrementalPlaceholder) {\n          var _incrementalPlacehold;\n          var prevActorIdentifier = _this9._actorIdentifier;\n          _this9._actorIdentifier = (_incrementalPlacehold = incrementalPlaceholder.actorIdentifier) !== null && _incrementalPlacehold !== void 0 ? _incrementalPlacehold : _this9._actorIdentifier;\n          _this9._processIncrementalPlaceholder(payload, incrementalPlaceholder);\n          _this9._actorIdentifier = prevActorIdentifier;\n        });\n        if (_this9._isClientPayload || _this9._state === 'loading_final') {\n          process.env.NODE_ENV !== \"production\" ? warning(_this9._isClientPayload, 'RelayModernEnvironment: Operation `%s` contains @defer/@stream ' + 'directives but was executed in non-streaming mode. See ' + 'https://fburl.com/relay-incremental-delivery-non-streaming-warning.', _this9._operation.request.node.params.name) : void 0;\n          var relayPayloads = [];\n          incrementalPlaceholders.forEach(function (placeholder) {\n            if (placeholder.kind === 'defer') {\n              relayPayloads.push(_this9._processDeferResponse(placeholder.label, placeholder.path, placeholder, {\n                data: placeholder.data\n              }));\n            }\n          });\n          if (relayPayloads.length > 0) {\n            _this9._processPayloadFollowups(relayPayloads);\n          }\n        }\n      }\n    });\n  };\n  _proto._maybeCompleteSubscriptionOperationTracking = function _maybeCompleteSubscriptionOperationTracking() {\n    if (!this._isSubscriptionOperation) {\n      return;\n    }\n    if (this._pendingModulePayloadsCount === 0 && this._incrementalPayloadsPending === false) {\n      this._completeOperationTracker();\n    }\n  };\n  _proto._processFollowupPayload = function _processFollowupPayload(followupPayload) {\n    var _this10 = this;\n    switch (followupPayload.kind) {\n      case 'ModuleImportPayload':\n        var operationLoader = this._expectOperationLoader();\n        var node = operationLoader.get(followupPayload.operationReference);\n        if (node != null) {\n          this._processFollowupPayloadWithNormalizationNode(followupPayload, getOperation(node));\n        } else {\n          var id = this._nextSubscriptionId++;\n          this._pendingModulePayloadsCount++;\n          var decrementPendingCount = function decrementPendingCount() {\n            _this10._pendingModulePayloadsCount--;\n            _this10._maybeCompleteSubscriptionOperationTracking();\n          };\n          var networkObservable = RelayObservable.from(new Promise(function (resolve, reject) {\n            operationLoader.load(followupPayload.operationReference).then(resolve, reject);\n          }));\n          RelayObservable.create(function (sink) {\n            var cancellationToken;\n            var subscription = networkObservable.subscribe({\n              next: function next(loadedNode) {\n                if (loadedNode != null) {\n                  var publishModuleImportPayload = function publishModuleImportPayload() {\n                    try {\n                      var operation = getOperation(loadedNode);\n                      var batchAsyncModuleUpdatesFN = RelayFeatureFlags.BATCH_ASYNC_MODULE_UPDATES_FN;\n                      var shouldScheduleAsyncStoreUpdate = batchAsyncModuleUpdatesFN != null && _this10._pendingModulePayloadsCount > 1;\n                      var _withDuration2 = withDuration(function () {\n                          _this10._handleFollowupPayload(followupPayload, operation);\n                          if (shouldScheduleAsyncStoreUpdate) {\n                            _this10._scheduleAsyncStoreUpdate(batchAsyncModuleUpdatesFN, sink.complete);\n                          } else {\n                            var updatedOwners = _this10._runPublishQueue();\n                            _this10._updateOperationTracker(updatedOwners);\n                          }\n                        }),\n                        duration = _withDuration2[0];\n                      _this10._log({\n                        name: 'execute.async.module',\n                        executeId: _this10._executeId,\n                        operationName: operation.name,\n                        duration: duration\n                      });\n                      if (!shouldScheduleAsyncStoreUpdate) {\n                        sink.complete();\n                      }\n                    } catch (error) {\n                      sink.error(error);\n                    }\n                  };\n                  var scheduler = _this10._scheduler;\n                  if (scheduler == null) {\n                    publishModuleImportPayload();\n                  } else {\n                    cancellationToken = scheduler.schedule(publishModuleImportPayload);\n                  }\n                } else {\n                  sink.complete();\n                }\n              },\n              error: sink.error\n            });\n            return function () {\n              subscription.unsubscribe();\n              if (_this10._scheduler != null && cancellationToken != null) {\n                _this10._scheduler.cancel(cancellationToken);\n              }\n            };\n          }).subscribe({\n            complete: function complete() {\n              _this10._complete(id);\n              decrementPendingCount();\n            },\n            error: function error(_error4) {\n              _this10._error(_error4);\n              decrementPendingCount();\n            },\n            start: function start(subscription) {\n              return _this10._start(id, subscription);\n            }\n          });\n        }\n        break;\n      case 'ActorPayload':\n        this._processFollowupPayloadWithNormalizationNode(followupPayload, followupPayload.node);\n        break;\n      default:\n        followupPayload;\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unexpected followup kind `%s`.', followupPayload.kind) : invariant(false) : void 0;\n    }\n  };\n  _proto._processFollowupPayloadWithNormalizationNode = function _processFollowupPayloadWithNormalizationNode(followupPayload, normalizationNode) {\n    this._handleFollowupPayload(followupPayload, normalizationNode);\n    this._maybeCompleteSubscriptionOperationTracking();\n  };\n  _proto._handleFollowupPayload = function _handleFollowupPayload(followupPayload, normalizationNode) {\n    var relayPayload = this._normalizeFollowupPayload(followupPayload, normalizationNode);\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload);\n    this._processPayloadFollowups([relayPayload]);\n  };\n  _proto._processIncrementalPlaceholder = function _processIncrementalPlaceholder(relayPayload, placeholder) {\n    var _relayPayload$fieldPa;\n    var label = placeholder.label,\n      path = placeholder.path;\n    var pathKey = path.map(String).join('.');\n    var resultForLabel = this._incrementalResults.get(label);\n    if (resultForLabel == null) {\n      resultForLabel = new Map();\n      this._incrementalResults.set(label, resultForLabel);\n    }\n    var resultForPath = resultForLabel.get(pathKey);\n    var pendingResponses = resultForPath != null && resultForPath.kind === 'response' ? resultForPath.responses : null;\n    resultForLabel.set(pathKey, {\n      kind: 'placeholder',\n      placeholder: placeholder\n    });\n    var parentID;\n    if (placeholder.kind === 'stream') {\n      parentID = placeholder.parentID;\n    } else if (placeholder.kind === 'defer') {\n      parentID = placeholder.selector.dataID;\n    } else {\n      placeholder;\n      !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Unsupported incremental placeholder kind `%s`.', placeholder.kind) : invariant(false) : void 0;\n    }\n    var parentRecord = relayPayload.source.get(parentID);\n    var parentPayloads = ((_relayPayload$fieldPa = relayPayload.fieldPayloads) !== null && _relayPayload$fieldPa !== void 0 ? _relayPayload$fieldPa : []).filter(function (fieldPayload) {\n      var fieldID = generateClientID(fieldPayload.dataID, fieldPayload.fieldKey);\n      return fieldPayload.dataID === parentID || fieldID === parentID;\n    });\n    !(parentRecord != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected record `%s` to exist.', parentID) : invariant(false) : void 0;\n    var nextParentRecord;\n    var nextParentPayloads;\n    var previousParentEntry = this._source.get(parentID);\n    if (previousParentEntry != null) {\n      nextParentRecord = RelayModernRecord.update(previousParentEntry.record, parentRecord);\n      var handlePayloads = new Map();\n      var dedupePayload = function dedupePayload(payload) {\n        var key = stableStringify(payload);\n        handlePayloads.set(key, payload);\n      };\n      previousParentEntry.fieldPayloads.forEach(dedupePayload);\n      parentPayloads.forEach(dedupePayload);\n      nextParentPayloads = Array.from(handlePayloads.values());\n    } else {\n      nextParentRecord = parentRecord;\n      nextParentPayloads = parentPayloads;\n    }\n    this._source.set(parentID, {\n      record: nextParentRecord,\n      fieldPayloads: nextParentPayloads\n    });\n    if (pendingResponses != null) {\n      var payloadFollowups = this._processIncrementalResponses(pendingResponses);\n      this._processPayloadFollowups(payloadFollowups);\n    }\n  };\n  _proto._processIncrementalResponses = function _processIncrementalResponses(incrementalResponses) {\n    var _this11 = this;\n    var relayPayloads = [];\n    incrementalResponses.forEach(function (incrementalResponse) {\n      var label = incrementalResponse.label,\n        path = incrementalResponse.path,\n        response = incrementalResponse.response;\n      var resultForLabel = _this11._incrementalResults.get(label);\n      if (resultForLabel == null) {\n        resultForLabel = new Map();\n        _this11._incrementalResults.set(label, resultForLabel);\n      }\n      if (label.indexOf('$defer$') !== -1) {\n        var pathKey = path.map(String).join('.');\n        var resultForPath = resultForLabel.get(pathKey);\n        if (resultForPath == null) {\n          resultForPath = {\n            kind: 'response',\n            responses: [incrementalResponse]\n          };\n          resultForLabel.set(pathKey, resultForPath);\n          return;\n        } else if (resultForPath.kind === 'response') {\n          resultForPath.responses.push(incrementalResponse);\n          return;\n        }\n        var placeholder = resultForPath.placeholder;\n        !(placeholder.kind === 'defer') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected data for path `%s` for label `%s` ' + 'to be data for @defer, was `@%s`.', pathKey, label, placeholder.kind) : invariant(false) : void 0;\n        relayPayloads.push(_this11._processDeferResponse(label, path, placeholder, response));\n      } else {\n        var _pathKey = path.slice(0, -2).map(String).join('.');\n        var _resultForPath = resultForLabel.get(_pathKey);\n        if (_resultForPath == null) {\n          _resultForPath = {\n            kind: 'response',\n            responses: [incrementalResponse]\n          };\n          resultForLabel.set(_pathKey, _resultForPath);\n          return;\n        } else if (_resultForPath.kind === 'response') {\n          _resultForPath.responses.push(incrementalResponse);\n          return;\n        }\n        var _placeholder = _resultForPath.placeholder;\n        !(_placeholder.kind === 'stream') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected data for path `%s` for label `%s` ' + 'to be data for @stream, was `@%s`.', _pathKey, label, _placeholder.kind) : invariant(false) : void 0;\n        relayPayloads.push(_this11._processStreamResponse(label, path, _placeholder, response));\n      }\n    });\n    return relayPayloads;\n  };\n  _proto._processDeferResponse = function _processDeferResponse(label, path, placeholder, response) {\n    var _placeholder$actorIde;\n    var parentID = placeholder.selector.dataID;\n    var prevActorIdentifier = this._actorIdentifier;\n    this._actorIdentifier = (_placeholder$actorIde = placeholder.actorIdentifier) !== null && _placeholder$actorIde !== void 0 ? _placeholder$actorIde : this._actorIdentifier;\n    var relayPayload = this._normalizeResponse(response, placeholder.selector, placeholder.typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: placeholder.path,\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload);\n    var parentEntry = this._source.get(parentID);\n    !(parentEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the parent record `%s` for @defer ' + 'data to exist.', parentID) : invariant(false) : void 0;\n    var fieldPayloads = parentEntry.fieldPayloads;\n    if (fieldPayloads.length !== 0) {\n      var _response$extensions2;\n      var handleFieldsRelayPayload = {\n        errors: null,\n        fieldPayloads: fieldPayloads,\n        incrementalPlaceholders: null,\n        followupPayloads: null,\n        source: RelayRecordSource.create(),\n        isFinal: ((_response$extensions2 = response.extensions) === null || _response$extensions2 === void 0 ? void 0 : _response$extensions2.is_final) === true\n      };\n      this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);\n    }\n    this._actorIdentifier = prevActorIdentifier;\n    return relayPayload;\n  };\n  _proto._processStreamResponse = function _processStreamResponse(label, path, placeholder, response) {\n    var parentID = placeholder.parentID,\n      node = placeholder.node,\n      variables = placeholder.variables,\n      actorIdentifier = placeholder.actorIdentifier;\n    var prevActorIdentifier = this._actorIdentifier;\n    this._actorIdentifier = actorIdentifier !== null && actorIdentifier !== void 0 ? actorIdentifier : this._actorIdentifier;\n    var field = node.selections[0];\n    !(field != null && field.kind === 'LinkedField' && field.plural === true) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected @stream to be used on a plural field.') : invariant(false) : void 0;\n    var _this$_normalizeStrea = this._normalizeStreamItem(response, parentID, field, variables, path, placeholder.path),\n      fieldPayloads = _this$_normalizeStrea.fieldPayloads,\n      itemID = _this$_normalizeStrea.itemID,\n      itemIndex = _this$_normalizeStrea.itemIndex,\n      prevIDs = _this$_normalizeStrea.prevIDs,\n      relayPayload = _this$_normalizeStrea.relayPayload,\n      storageKey = _this$_normalizeStrea.storageKey;\n    this._getPublishQueueAndSaveActor().commitPayload(this._operation, relayPayload, function (store) {\n      var currentParentRecord = store.get(parentID);\n      if (currentParentRecord == null) {\n        return;\n      }\n      var currentItems = currentParentRecord.getLinkedRecords(storageKey);\n      if (currentItems == null) {\n        return;\n      }\n      if (currentItems.length !== prevIDs.length || currentItems.some(function (currentItem, index) {\n        return prevIDs[index] !== (currentItem && currentItem.getDataID());\n      })) {\n        return;\n      }\n      var nextItems = (0, _toConsumableArray2[\"default\"])(currentItems);\n      nextItems[itemIndex] = store.get(itemID);\n      currentParentRecord.setLinkedRecords(nextItems, storageKey);\n    });\n    if (fieldPayloads.length !== 0) {\n      var handleFieldsRelayPayload = {\n        errors: null,\n        fieldPayloads: fieldPayloads,\n        incrementalPlaceholders: null,\n        followupPayloads: null,\n        source: RelayRecordSource.create(),\n        isFinal: false\n      };\n      this._getPublishQueueAndSaveActor().commitPayload(this._operation, handleFieldsRelayPayload);\n    }\n    this._actorIdentifier = prevActorIdentifier;\n    return relayPayload;\n  };\n  _proto._normalizeStreamItem = function _normalizeStreamItem(response, parentID, field, variables, path, normalizationPath) {\n    var _field$alias, _field$concreteType, _ref, _this$_getDataID;\n    var data = response.data;\n    !(typeof data === 'object') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the GraphQL @stream payload `data` ' + 'value to be an object.') : invariant(false) : void 0;\n    var responseKey = (_field$alias = field.alias) !== null && _field$alias !== void 0 ? _field$alias : field.name;\n    var storageKey = getStorageKey(field, variables);\n    var parentEntry = this._source.get(parentID);\n    !(parentEntry != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected the parent record `%s` for @stream ' + 'data to exist.', parentID) : invariant(false) : void 0;\n    var parentRecord = parentEntry.record,\n      fieldPayloads = parentEntry.fieldPayloads;\n    var prevIDs = RelayModernRecord.getLinkedRecordIDs(parentRecord, storageKey);\n    !(prevIDs != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected record `%s` to have fetched field ' + '`%s` with @stream.', parentID, field.name) : invariant(false) : void 0;\n    var finalPathEntry = path[path.length - 1];\n    var itemIndex = parseInt(finalPathEntry, 10);\n    !(itemIndex === finalPathEntry && itemIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected path for @stream to end in a ' + 'positive integer index, got `%s`', finalPathEntry) : invariant(false) : void 0;\n    var typeName = (_field$concreteType = field.concreteType) !== null && _field$concreteType !== void 0 ? _field$concreteType : data[TYPENAME_KEY];\n    !(typeof typeName === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected @stream field `%s` to have a ' + '__typename.', field.name) : invariant(false) : void 0;\n    var itemID = (_ref = (_this$_getDataID = this._getDataID(data, typeName)) !== null && _this$_getDataID !== void 0 ? _this$_getDataID : prevIDs === null || prevIDs === void 0 ? void 0 : prevIDs[itemIndex]) !== null && _ref !== void 0 ? _ref : generateClientID(parentID, storageKey, itemIndex);\n    !(typeof itemID === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected id of elements of field `%s` to ' + 'be strings.', storageKey) : invariant(false) : void 0;\n    var selector = createNormalizationSelector(field, itemID, variables);\n    var nextParentRecord = RelayModernRecord.clone(parentRecord);\n    var nextIDs = (0, _toConsumableArray2[\"default\"])(prevIDs);\n    nextIDs[itemIndex] = itemID;\n    RelayModernRecord.setLinkedRecordIDs(nextParentRecord, storageKey, nextIDs);\n    this._source.set(parentID, {\n      record: nextParentRecord,\n      fieldPayloads: fieldPayloads\n    });\n    var relayPayload = this._normalizeResponse(response, selector, typeName, {\n      actorIdentifier: this._actorIdentifier,\n      getDataID: this._getDataID,\n      path: [].concat((0, _toConsumableArray2[\"default\"])(normalizationPath), [responseKey, String(itemIndex)]),\n      treatMissingFieldsAsNull: this._treatMissingFieldsAsNull,\n      shouldProcessClientComponents: this._shouldProcessClientComponents\n    });\n    return {\n      fieldPayloads: fieldPayloads,\n      itemID: itemID,\n      itemIndex: itemIndex,\n      prevIDs: prevIDs,\n      relayPayload: relayPayload,\n      storageKey: storageKey\n    };\n  };\n  _proto._scheduleAsyncStoreUpdate = function _scheduleAsyncStoreUpdate(scheduleFn, completeFn) {\n    var _this12 = this;\n    this._completeFns.push(completeFn);\n    if (this._asyncStoreUpdateDisposable != null) {\n      return;\n    }\n    this._asyncStoreUpdateDisposable = scheduleFn(function () {\n      _this12._asyncStoreUpdateDisposable = null;\n      var updatedOwners = _this12._runPublishQueue();\n      _this12._updateOperationTracker(updatedOwners);\n      var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(_this12._completeFns),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var complete = _step2.value;\n          complete();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      _this12._completeFns = [];\n    });\n  };\n  _proto._updateOperationTracker = function _updateOperationTracker(updatedOwners) {\n    if (updatedOwners != null && updatedOwners.length > 0) {\n      this._operationTracker.update(this._operation.request, new Set(updatedOwners));\n    }\n  };\n  _proto._completeOperationTracker = function _completeOperationTracker() {\n    this._operationTracker.complete(this._operation.request);\n  };\n  _proto._getPublishQueueAndSaveActor = function _getPublishQueueAndSaveActor() {\n    this._seenActors.add(this._actorIdentifier);\n    return this._getPublishQueue(this._actorIdentifier);\n  };\n  _proto._getActorsToVisit = function _getActorsToVisit() {\n    if (this._seenActors.size === 0) {\n      return new Set([this._actorIdentifier]);\n    } else {\n      return this._seenActors;\n    }\n  };\n  _proto._runPublishQueue = function _runPublishQueue(operation) {\n    var updatedOwners = new Set();\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(this._getActorsToVisit()),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var actorIdentifier = _step3.value;\n        var owners = this._getPublishQueue(actorIdentifier).run(operation);\n        owners.forEach(function (owner) {\n          return updatedOwners.add(owner);\n        });\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return Array.from(updatedOwners);\n  };\n  _proto._retainData = function _retainData() {\n    var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(this._getActorsToVisit()),\n      _step4;\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var actorIdentifier = _step4.value;\n        if (!this._retainDisposables.has(actorIdentifier)) {\n          this._retainDisposables.set(actorIdentifier, this._getStore(actorIdentifier).retain(this._operation));\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n  };\n  _proto._disposeRetainedData = function _disposeRetainedData() {\n    var _iterator5 = (0, _createForOfIteratorHelper2[\"default\"])(this._retainDisposables.values()),\n      _step5;\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var disposable = _step5.value;\n        disposable.dispose();\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n    this._retainDisposables.clear();\n  };\n  _proto._expectOperationLoader = function _expectOperationLoader() {\n    var operationLoader = this._operationLoader;\n    !operationLoader ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: Expected an operationLoader to be ' + 'configured when using `@match`.') : invariant(false) : void 0;\n    return operationLoader;\n  };\n  return Executor;\n}();\nfunction partitionGraphQLResponses(responses) {\n  var nonIncrementalResponses = [];\n  var incrementalResponses = [];\n  responses.forEach(function (response) {\n    if (response.path != null || response.label != null) {\n      var label = response.label,\n        path = response.path;\n      if (label == null || path == null) {\n        !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: invalid incremental payload, expected ' + '`path` and `label` to either both be null/undefined, or ' + '`path` to be an `Array<string | number>` and `label` to be a ' + '`string`.') : invariant(false) : void 0;\n      }\n      incrementalResponses.push({\n        label: label,\n        path: path,\n        response: response\n      });\n    } else {\n      nonIncrementalResponses.push(response);\n    }\n  });\n  return [nonIncrementalResponses, incrementalResponses];\n}\nfunction stableStringify(value) {\n  var _JSON$stringify;\n  return (_JSON$stringify = JSON.stringify(stableCopy(value))) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : '';\n}\nfunction validateOptimisticResponsePayload(payload) {\n  var incrementalPlaceholders = payload.incrementalPlaceholders;\n  if (incrementalPlaceholders != null && incrementalPlaceholders.length !== 0) {\n    !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'OperationExecutor: optimistic responses cannot be returned ' + 'for operations that use incremental data delivery (@defer, ' + '@stream, and @stream_connection).') : invariant(false) : void 0;\n  }\n}\nmodule.exports = {\n  execute: execute\n};"],"names":["_interopRequireDefault","require","_createForOfIteratorHelper2","_toConsumableArray2","RelayObservable","generateID","getOperation","RelayError","RelayFeatureFlags","stableCopy","withDuration","_require","generateClientID","generateUniqueClientID","getLocalVariables","RelayModernRecord","_require3","createNormalizationSelector","createReaderSelector","RelayRecordSource","_require4","ROOT_TYPE","TYPENAME_KEY","getStorageKey","invariant","Executor","_ref2","_this","this","actorIdentifier","getDataID","getPublishQueue","getStore","isClientPayload","operation","operationExecutions","operationLoader","operationTracker","optimisticConfig","scheduler","shouldProcessClientComponents","sink","source","treatMissingFieldsAsNull","updater","log","normalizeResponse","_actorIdentifier","_getDataID","_treatMissingFieldsAsNull","_incrementalPayloadsPending","_incrementalResults","Map","_log","_executeId","_nextSubscriptionId","_operation","_operationExecutions","_operationLoader","_operationTracker","_operationUpdateEpochs","_optimisticUpdates","_pendingModulePayloadsCount","_getPublishQueue","_scheduler","_sink","_source","_state","_getStore","_subscriptions","_updater","_isClientPayload","_isSubscriptionOperation","request","node","params","operationKind","_shouldProcessClientComponents","_retainDisposables","_seenActors","Set","_completeFns","_normalizeResponse","id","subscribe","complete","_complete","error","_error2","_error","next","response","_next","start","subscription","_this$_operation$requ","_start","name","executeId","variables","cacheConfig","_processOptimisticResponse","data","_proto","prototype","cancel","_this2","identifier","size","forEach","sub","unsubscribe","clear","optimisticUpdates","update","_getPublishQueueAndSaveActor","revertUpdate","_runPublishQueue","_asyncStoreUpdateDisposable","dispose","_completeOperationTracker","_disposeRetainedData","_updateActiveState","activeState","set","_schedule","task","_this3","create","cancellationToken","schedule","_error3","_id","_this4","duration","_handleNext","_maybeCompleteSubscriptionOperationTracking","_handleErrorResponse","responses","_this5","results","extensions","hasOwnProperty","errors","messages","map","_ref3","message","join","stack","responseWithData","push","_handleOptimisticResponses","_response$extensions","length","some","responsePart","_responsePart$extensi","isOptimistic","Array","isArray","responsesWithData","x","_x$extensions","is_final","_partitionGraphQLResp","nonIncrementalResponses","incrementalResponses","path","label","partitionGraphQLResponses","hasNonIncrementalResponses","nextID","fragment","owner","root","payloadFollowups","_processResponses","_processPayloadFollowups","_payloadFollowups","_processIncrementalResponses","__relay_subscription_root_id","dataID","updatedOwners","undefined","_retainData","_updateOperationTracker","_this6","payload","validateOptimisticResponsePayload","_processOptimisticFollowups","fieldPayloads","incrementalPlaceholders","followupPayloads","isFinal","applyUpdate","ENABLE_OPERATION_TRACKER_OPTIMISTIC_UPDATES","_step","_iterator","s","n","done","followupPayload","value","kind","_expectOperationLoader","get","operationReference","_processAsyncOptimisticModuleImport","moduleImportOptimisticUpdates","_processOptimisticModuleImport","apply","err","e","f","_normalizeFollowupPayload","normalizationNode","argumentDefinitions","args","selector","typeName","normalizationRootNode","moduleImportPayload","modulePayload","_this7","load","then","_this$_optimisticUpda","_this8","payloadPart","relayPayload","commitPayload","payloads","_this9","_followupPayload$acto","prevActorIdentifier","_processFollowupPayload","incrementalPlaceholder","_incrementalPlacehold","_processIncrementalPlaceholder","relayPayloads","placeholder","_processDeferResponse","_this10","_processFollowupPayloadWithNormalizationNode","decrementPendingCount","networkObservable","from","Promise","resolve","reject","loadedNode","publishModuleImportPayload","batchAsyncModuleUpdatesFN","BATCH_ASYNC_MODULE_UPDATES_FN","shouldScheduleAsyncStoreUpdate","_handleFollowupPayload","_scheduleAsyncStoreUpdate","operationName","_error4","_relayPayload$fieldPa","pathKey","String","resultForLabel","parentID","resultForPath","pendingResponses","nextParentRecord","nextParentPayloads","parentRecord","parentPayloads","filter","fieldPayload","fieldID","fieldKey","previousParentEntry","record","handlePayloads","dedupePayload","_JSON$stringify","key","JSON","stringify","values","_this11","incrementalResponse","indexOf","_pathKey","slice","_resultForPath","_placeholder","_processStreamResponse","_placeholder$actorIde","parentEntry","_response$extensions2","handleFieldsRelayPayload","field","selections","plural","_this$_normalizeStrea","_normalizeStreamItem","itemID","itemIndex","prevIDs","storageKey","store","currentParentRecord","currentItems","getLinkedRecords","currentItem","index","nextItems","setLinkedRecords","normalizationPath","_field$alias","_field$concreteType","_ref","_this$_getDataID","responseKey","alias","getLinkedRecordIDs","finalPathEntry","parseInt","concreteType","clone","nextIDs","setLinkedRecordIDs","concat","scheduleFn","completeFn","_this12","_step2","_iterator2","add","_getActorsToVisit","_step3","_iterator3","run","_step4","_iterator4","has","retain","_step5","_iterator5","module","exports","execute","config"],"sourceRoot":""}
{"version":3,"file":"index.esm.js.js?f3170","mappings":"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","sources":["webpack://@aztlan/template-react/../../node_modules/react-helmet-async/lib/index.esm.js"],"sourcesContent":["// src/index.tsx\nimport React3, { Component as Component3 } from \"react\";\nimport fastCompare from \"react-fast-compare\";\nimport invariant from \"invariant\";\n\n// src/Provider.tsx\nimport React2, { Component } from \"react\";\n\n// src/server.ts\nimport React from \"react\";\n\n// src/constants.ts\nvar TAG_NAMES = /* @__PURE__ */ ((TAG_NAMES2) => {\n  TAG_NAMES2[\"BASE\"] = \"base\";\n  TAG_NAMES2[\"BODY\"] = \"body\";\n  TAG_NAMES2[\"HEAD\"] = \"head\";\n  TAG_NAMES2[\"HTML\"] = \"html\";\n  TAG_NAMES2[\"LINK\"] = \"link\";\n  TAG_NAMES2[\"META\"] = \"meta\";\n  TAG_NAMES2[\"NOSCRIPT\"] = \"noscript\";\n  TAG_NAMES2[\"SCRIPT\"] = \"script\";\n  TAG_NAMES2[\"STYLE\"] = \"style\";\n  TAG_NAMES2[\"TITLE\"] = \"title\";\n  TAG_NAMES2[\"FRAGMENT\"] = \"Symbol(react.fragment)\";\n  return TAG_NAMES2;\n})(TAG_NAMES || {});\nvar SEO_PRIORITY_TAGS = {\n  link: { rel: [\"amphtml\", \"canonical\", \"alternate\"] },\n  script: { type: [\"application/ld+json\"] },\n  meta: {\n    charset: \"\",\n    name: [\"generator\", \"robots\", \"description\"],\n    property: [\n      \"og:type\",\n      \"og:title\",\n      \"og:url\",\n      \"og:image\",\n      \"og:image:alt\",\n      \"og:description\",\n      \"twitter:url\",\n      \"twitter:title\",\n      \"twitter:description\",\n      \"twitter:image\",\n      \"twitter:image:alt\",\n      \"twitter:card\",\n      \"twitter:site\"\n    ]\n  }\n};\nvar VALID_TAG_NAMES = Object.values(TAG_NAMES);\nvar REACT_TAG_MAP = {\n  accesskey: \"accessKey\",\n  charset: \"charSet\",\n  class: \"className\",\n  contenteditable: \"contentEditable\",\n  contextmenu: \"contextMenu\",\n  \"http-equiv\": \"httpEquiv\",\n  itemprop: \"itemProp\",\n  tabindex: \"tabIndex\"\n};\nvar HTML_TAG_MAP = Object.entries(REACT_TAG_MAP).reduce(\n  (carry, [key, value]) => {\n    carry[value] = key;\n    return carry;\n  },\n  {}\n);\nvar HELMET_ATTRIBUTE = \"data-rh\";\n\n// src/utils.ts\nvar HELMET_PROPS = {\n  DEFAULT_TITLE: \"defaultTitle\",\n  DEFER: \"defer\",\n  ENCODE_SPECIAL_CHARACTERS: \"encodeSpecialCharacters\",\n  ON_CHANGE_CLIENT_STATE: \"onChangeClientState\",\n  TITLE_TEMPLATE: \"titleTemplate\",\n  PRIORITIZE_SEO_TAGS: \"prioritizeSeoTags\"\n};\nvar getInnermostProperty = (propsList, property) => {\n  for (let i = propsList.length - 1; i >= 0; i -= 1) {\n    const props = propsList[i];\n    if (Object.prototype.hasOwnProperty.call(props, property)) {\n      return props[property];\n    }\n  }\n  return null;\n};\nvar getTitleFromPropsList = (propsList) => {\n  let innermostTitle = getInnermostProperty(propsList, \"title\" /* TITLE */);\n  const innermostTemplate = getInnermostProperty(propsList, HELMET_PROPS.TITLE_TEMPLATE);\n  if (Array.isArray(innermostTitle)) {\n    innermostTitle = innermostTitle.join(\"\");\n  }\n  if (innermostTemplate && innermostTitle) {\n    return innermostTemplate.replace(/%s/g, () => innermostTitle);\n  }\n  const innermostDefaultTitle = getInnermostProperty(propsList, HELMET_PROPS.DEFAULT_TITLE);\n  return innermostTitle || innermostDefaultTitle || void 0;\n};\nvar getOnChangeClientState = (propsList) => getInnermostProperty(propsList, HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || (() => {\n});\nvar getAttributesFromPropsList = (tagType, propsList) => propsList.filter((props) => typeof props[tagType] !== \"undefined\").map((props) => props[tagType]).reduce((tagAttrs, current) => ({ ...tagAttrs, ...current }), {});\nvar getBaseTagFromPropsList = (primaryAttributes, propsList) => propsList.filter((props) => typeof props[\"base\" /* BASE */] !== \"undefined\").map((props) => props[\"base\" /* BASE */]).reverse().reduce((innermostBaseTag, tag) => {\n  if (!innermostBaseTag.length) {\n    const keys = Object.keys(tag);\n    for (let i = 0; i < keys.length; i += 1) {\n      const attributeKey = keys[i];\n      const lowerCaseAttributeKey = attributeKey.toLowerCase();\n      if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n        return innermostBaseTag.concat(tag);\n      }\n    }\n  }\n  return innermostBaseTag;\n}, []);\nvar warn = (msg) => console && typeof console.warn === \"function\" && console.warn(msg);\nvar getTagsFromPropsList = (tagName, primaryAttributes, propsList) => {\n  const approvedSeenTags = {};\n  return propsList.filter((props) => {\n    if (Array.isArray(props[tagName])) {\n      return true;\n    }\n    if (typeof props[tagName] !== \"undefined\") {\n      warn(\n        `Helmet: ${tagName} should be of type \"Array\". Instead found type \"${typeof props[tagName]}\"`\n      );\n    }\n    return false;\n  }).map((props) => props[tagName]).reverse().reduce((approvedTags, instanceTags) => {\n    const instanceSeenTags = {};\n    instanceTags.filter((tag) => {\n      let primaryAttributeKey;\n      const keys2 = Object.keys(tag);\n      for (let i = 0; i < keys2.length; i += 1) {\n        const attributeKey = keys2[i];\n        const lowerCaseAttributeKey = attributeKey.toLowerCase();\n        if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === \"rel\" /* REL */ && tag[primaryAttributeKey].toLowerCase() === \"canonical\") && !(lowerCaseAttributeKey === \"rel\" /* REL */ && tag[lowerCaseAttributeKey].toLowerCase() === \"stylesheet\")) {\n          primaryAttributeKey = lowerCaseAttributeKey;\n        }\n        if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === \"innerHTML\" /* INNER_HTML */ || attributeKey === \"cssText\" /* CSS_TEXT */ || attributeKey === \"itemprop\" /* ITEM_PROP */)) {\n          primaryAttributeKey = attributeKey;\n        }\n      }\n      if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n        return false;\n      }\n      const value = tag[primaryAttributeKey].toLowerCase();\n      if (!approvedSeenTags[primaryAttributeKey]) {\n        approvedSeenTags[primaryAttributeKey] = {};\n      }\n      if (!instanceSeenTags[primaryAttributeKey]) {\n        instanceSeenTags[primaryAttributeKey] = {};\n      }\n      if (!approvedSeenTags[primaryAttributeKey][value]) {\n        instanceSeenTags[primaryAttributeKey][value] = true;\n        return true;\n      }\n      return false;\n    }).reverse().forEach((tag) => approvedTags.push(tag));\n    const keys = Object.keys(instanceSeenTags);\n    for (let i = 0; i < keys.length; i += 1) {\n      const attributeKey = keys[i];\n      const tagUnion = {\n        ...approvedSeenTags[attributeKey],\n        ...instanceSeenTags[attributeKey]\n      };\n      approvedSeenTags[attributeKey] = tagUnion;\n    }\n    return approvedTags;\n  }, []).reverse();\n};\nvar getAnyTrueFromPropsList = (propsList, checkedTag) => {\n  if (Array.isArray(propsList) && propsList.length) {\n    for (let index = 0; index < propsList.length; index += 1) {\n      const prop = propsList[index];\n      if (prop[checkedTag]) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\nvar reducePropsToState = (propsList) => ({\n  baseTag: getBaseTagFromPropsList([\"href\" /* HREF */], propsList),\n  bodyAttributes: getAttributesFromPropsList(\"bodyAttributes\" /* BODY */, propsList),\n  defer: getInnermostProperty(propsList, HELMET_PROPS.DEFER),\n  encode: getInnermostProperty(propsList, HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n  htmlAttributes: getAttributesFromPropsList(\"htmlAttributes\" /* HTML */, propsList),\n  linkTags: getTagsFromPropsList(\n    \"link\" /* LINK */,\n    [\"rel\" /* REL */, \"href\" /* HREF */],\n    propsList\n  ),\n  metaTags: getTagsFromPropsList(\n    \"meta\" /* META */,\n    [\n      \"name\" /* NAME */,\n      \"charset\" /* CHARSET */,\n      \"http-equiv\" /* HTTPEQUIV */,\n      \"property\" /* PROPERTY */,\n      \"itemprop\" /* ITEM_PROP */\n    ],\n    propsList\n  ),\n  noscriptTags: getTagsFromPropsList(\"noscript\" /* NOSCRIPT */, [\"innerHTML\" /* INNER_HTML */], propsList),\n  onChangeClientState: getOnChangeClientState(propsList),\n  scriptTags: getTagsFromPropsList(\n    \"script\" /* SCRIPT */,\n    [\"src\" /* SRC */, \"innerHTML\" /* INNER_HTML */],\n    propsList\n  ),\n  styleTags: getTagsFromPropsList(\"style\" /* STYLE */, [\"cssText\" /* CSS_TEXT */], propsList),\n  title: getTitleFromPropsList(propsList),\n  titleAttributes: getAttributesFromPropsList(\"titleAttributes\" /* TITLE */, propsList),\n  prioritizeSeoTags: getAnyTrueFromPropsList(propsList, HELMET_PROPS.PRIORITIZE_SEO_TAGS)\n});\nvar flattenArray = (possibleArray) => Array.isArray(possibleArray) ? possibleArray.join(\"\") : possibleArray;\nvar checkIfPropsMatch = (props, toMatch) => {\n  const keys = Object.keys(props);\n  for (let i = 0; i < keys.length; i += 1) {\n    if (toMatch[keys[i]] && toMatch[keys[i]].includes(props[keys[i]])) {\n      return true;\n    }\n  }\n  return false;\n};\nvar prioritizer = (elementsList, propsToMatch) => {\n  if (Array.isArray(elementsList)) {\n    return elementsList.reduce(\n      (acc, elementAttrs) => {\n        if (checkIfPropsMatch(elementAttrs, propsToMatch)) {\n          acc.priority.push(elementAttrs);\n        } else {\n          acc.default.push(elementAttrs);\n        }\n        return acc;\n      },\n      { priority: [], default: [] }\n    );\n  }\n  return { default: elementsList, priority: [] };\n};\nvar without = (obj, key) => {\n  return {\n    ...obj,\n    [key]: void 0\n  };\n};\n\n// src/server.ts\nvar SELF_CLOSING_TAGS = [\"noscript\" /* NOSCRIPT */, \"script\" /* SCRIPT */, \"style\" /* STYLE */];\nvar encodeSpecialCharacters = (str, encode = true) => {\n  if (encode === false) {\n    return String(str);\n  }\n  return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n};\nvar generateElementAttributesAsString = (attributes) => Object.keys(attributes).reduce((str, key) => {\n  const attr = typeof attributes[key] !== \"undefined\" ? `${key}=\"${attributes[key]}\"` : `${key}`;\n  return str ? `${str} ${attr}` : attr;\n}, \"\");\nvar generateTitleAsString = (type, title, attributes, encode) => {\n  const attributeString = generateElementAttributesAsString(attributes);\n  const flattenedTitle = flattenArray(title);\n  return attributeString ? `<${type} ${HELMET_ATTRIBUTE}=\"true\" ${attributeString}>${encodeSpecialCharacters(\n    flattenedTitle,\n    encode\n  )}</${type}>` : `<${type} ${HELMET_ATTRIBUTE}=\"true\">${encodeSpecialCharacters(\n    flattenedTitle,\n    encode\n  )}</${type}>`;\n};\nvar generateTagsAsString = (type, tags, encode = true) => tags.reduce((str, t) => {\n  const tag = t;\n  const attributeHtml = Object.keys(tag).filter(\n    (attribute) => !(attribute === \"innerHTML\" /* INNER_HTML */ || attribute === \"cssText\" /* CSS_TEXT */)\n  ).reduce((string, attribute) => {\n    const attr = typeof tag[attribute] === \"undefined\" ? attribute : `${attribute}=\"${encodeSpecialCharacters(tag[attribute], encode)}\"`;\n    return string ? `${string} ${attr}` : attr;\n  }, \"\");\n  const tagContent = tag.innerHTML || tag.cssText || \"\";\n  const isSelfClosing = SELF_CLOSING_TAGS.indexOf(type) === -1;\n  return `${str}<${type} ${HELMET_ATTRIBUTE}=\"true\" ${attributeHtml}${isSelfClosing ? `/>` : `>${tagContent}</${type}>`}`;\n}, \"\");\nvar convertElementAttributesToReactProps = (attributes, initProps = {}) => Object.keys(attributes).reduce((obj, key) => {\n  const mapped = REACT_TAG_MAP[key];\n  obj[mapped || key] = attributes[key];\n  return obj;\n}, initProps);\nvar generateTitleAsReactComponent = (_type, title, attributes) => {\n  const initProps = {\n    key: title,\n    [HELMET_ATTRIBUTE]: true\n  };\n  const props = convertElementAttributesToReactProps(attributes, initProps);\n  return [React.createElement(\"title\" /* TITLE */, props, title)];\n};\nvar generateTagsAsReactComponent = (type, tags) => tags.map((tag, i) => {\n  const mappedTag = {\n    key: i,\n    [HELMET_ATTRIBUTE]: true\n  };\n  Object.keys(tag).forEach((attribute) => {\n    const mapped = REACT_TAG_MAP[attribute];\n    const mappedAttribute = mapped || attribute;\n    if (mappedAttribute === \"innerHTML\" /* INNER_HTML */ || mappedAttribute === \"cssText\" /* CSS_TEXT */) {\n      const content = tag.innerHTML || tag.cssText;\n      mappedTag.dangerouslySetInnerHTML = { __html: content };\n    } else {\n      mappedTag[mappedAttribute] = tag[attribute];\n    }\n  });\n  return React.createElement(type, mappedTag);\n});\nvar getMethodsForTag = (type, tags, encode = true) => {\n  switch (type) {\n    case \"title\" /* TITLE */:\n      return {\n        toComponent: () => generateTitleAsReactComponent(type, tags.title, tags.titleAttributes),\n        toString: () => generateTitleAsString(type, tags.title, tags.titleAttributes, encode)\n      };\n    case \"bodyAttributes\" /* BODY */:\n    case \"htmlAttributes\" /* HTML */:\n      return {\n        toComponent: () => convertElementAttributesToReactProps(tags),\n        toString: () => generateElementAttributesAsString(tags)\n      };\n    default:\n      return {\n        toComponent: () => generateTagsAsReactComponent(type, tags),\n        toString: () => generateTagsAsString(type, tags, encode)\n      };\n  }\n};\nvar getPriorityMethods = ({ metaTags, linkTags, scriptTags, encode }) => {\n  const meta = prioritizer(metaTags, SEO_PRIORITY_TAGS.meta);\n  const link = prioritizer(linkTags, SEO_PRIORITY_TAGS.link);\n  const script = prioritizer(scriptTags, SEO_PRIORITY_TAGS.script);\n  const priorityMethods = {\n    toComponent: () => [\n      ...generateTagsAsReactComponent(\"meta\" /* META */, meta.priority),\n      ...generateTagsAsReactComponent(\"link\" /* LINK */, link.priority),\n      ...generateTagsAsReactComponent(\"script\" /* SCRIPT */, script.priority)\n    ],\n    toString: () => (\n      // generate all the tags as strings and concatenate them\n      `${getMethodsForTag(\"meta\" /* META */, meta.priority, encode)} ${getMethodsForTag(\n        \"link\" /* LINK */,\n        link.priority,\n        encode\n      )} ${getMethodsForTag(\"script\" /* SCRIPT */, script.priority, encode)}`\n    )\n  };\n  return {\n    priorityMethods,\n    metaTags: meta.default,\n    linkTags: link.default,\n    scriptTags: script.default\n  };\n};\nvar mapStateOnServer = (props) => {\n  const {\n    baseTag,\n    bodyAttributes,\n    encode = true,\n    htmlAttributes,\n    noscriptTags,\n    styleTags,\n    title = \"\",\n    titleAttributes,\n    prioritizeSeoTags\n  } = props;\n  let { linkTags, metaTags, scriptTags } = props;\n  let priorityMethods = {\n    toComponent: () => {\n    },\n    toString: () => \"\"\n  };\n  if (prioritizeSeoTags) {\n    ({ priorityMethods, linkTags, metaTags, scriptTags } = getPriorityMethods(props));\n  }\n  return {\n    priority: priorityMethods,\n    base: getMethodsForTag(\"base\" /* BASE */, baseTag, encode),\n    bodyAttributes: getMethodsForTag(\"bodyAttributes\" /* BODY */, bodyAttributes, encode),\n    htmlAttributes: getMethodsForTag(\"htmlAttributes\" /* HTML */, htmlAttributes, encode),\n    link: getMethodsForTag(\"link\" /* LINK */, linkTags, encode),\n    meta: getMethodsForTag(\"meta\" /* META */, metaTags, encode),\n    noscript: getMethodsForTag(\"noscript\" /* NOSCRIPT */, noscriptTags, encode),\n    script: getMethodsForTag(\"script\" /* SCRIPT */, scriptTags, encode),\n    style: getMethodsForTag(\"style\" /* STYLE */, styleTags, encode),\n    title: getMethodsForTag(\"title\" /* TITLE */, { title, titleAttributes }, encode)\n  };\n};\nvar server_default = mapStateOnServer;\n\n// src/HelmetData.ts\nvar instances = [];\nvar isDocument = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nvar HelmetData = class {\n  instances = [];\n  canUseDOM = isDocument;\n  context;\n  value = {\n    setHelmet: (serverState) => {\n      this.context.helmet = serverState;\n    },\n    helmetInstances: {\n      get: () => this.canUseDOM ? instances : this.instances,\n      add: (instance) => {\n        (this.canUseDOM ? instances : this.instances).push(instance);\n      },\n      remove: (instance) => {\n        const index = (this.canUseDOM ? instances : this.instances).indexOf(instance);\n        (this.canUseDOM ? instances : this.instances).splice(index, 1);\n      }\n    }\n  };\n  constructor(context, canUseDOM) {\n    this.context = context;\n    this.canUseDOM = canUseDOM || false;\n    if (!canUseDOM) {\n      context.helmet = server_default({\n        baseTag: [],\n        bodyAttributes: {},\n        encodeSpecialCharacters: true,\n        htmlAttributes: {},\n        linkTags: [],\n        metaTags: [],\n        noscriptTags: [],\n        scriptTags: [],\n        styleTags: [],\n        title: \"\",\n        titleAttributes: {}\n      });\n    }\n  }\n};\n\n// src/Provider.tsx\nvar defaultValue = {};\nvar Context = React2.createContext(defaultValue);\nvar HelmetProvider = class _HelmetProvider extends Component {\n  static canUseDOM = isDocument;\n  helmetData;\n  constructor(props) {\n    super(props);\n    this.helmetData = new HelmetData(this.props.context || {}, _HelmetProvider.canUseDOM);\n  }\n  render() {\n    return /* @__PURE__ */ React2.createElement(Context.Provider, { value: this.helmetData.value }, this.props.children);\n  }\n};\n\n// src/Dispatcher.tsx\nimport { Component as Component2 } from \"react\";\nimport shallowEqual from \"shallowequal\";\n\n// src/client.ts\nvar updateTags = (type, tags) => {\n  const headElement = document.head || document.querySelector(\"head\" /* HEAD */);\n  const tagNodes = headElement.querySelectorAll(`${type}[${HELMET_ATTRIBUTE}]`);\n  const oldTags = [].slice.call(tagNodes);\n  const newTags = [];\n  let indexToDelete;\n  if (tags && tags.length) {\n    tags.forEach((tag) => {\n      const newElement = document.createElement(type);\n      for (const attribute in tag) {\n        if (Object.prototype.hasOwnProperty.call(tag, attribute)) {\n          if (attribute === \"innerHTML\" /* INNER_HTML */) {\n            newElement.innerHTML = tag.innerHTML;\n          } else if (attribute === \"cssText\" /* CSS_TEXT */) {\n            if (newElement.styleSheet) {\n              newElement.styleSheet.cssText = tag.cssText;\n            } else {\n              newElement.appendChild(document.createTextNode(tag.cssText));\n            }\n          } else {\n            const attr = attribute;\n            const value = typeof tag[attr] === \"undefined\" ? \"\" : tag[attr];\n            newElement.setAttribute(attribute, value);\n          }\n        }\n      }\n      newElement.setAttribute(HELMET_ATTRIBUTE, \"true\");\n      if (oldTags.some((existingTag, index) => {\n        indexToDelete = index;\n        return newElement.isEqualNode(existingTag);\n      })) {\n        oldTags.splice(indexToDelete, 1);\n      } else {\n        newTags.push(newElement);\n      }\n    });\n  }\n  oldTags.forEach((tag) => tag.parentNode?.removeChild(tag));\n  newTags.forEach((tag) => headElement.appendChild(tag));\n  return {\n    oldTags,\n    newTags\n  };\n};\nvar updateAttributes = (tagName, attributes) => {\n  const elementTag = document.getElementsByTagName(tagName)[0];\n  if (!elementTag) {\n    return;\n  }\n  const helmetAttributeString = elementTag.getAttribute(HELMET_ATTRIBUTE);\n  const helmetAttributes = helmetAttributeString ? helmetAttributeString.split(\",\") : [];\n  const attributesToRemove = [...helmetAttributes];\n  const attributeKeys = Object.keys(attributes);\n  for (const attribute of attributeKeys) {\n    const value = attributes[attribute] || \"\";\n    if (elementTag.getAttribute(attribute) !== value) {\n      elementTag.setAttribute(attribute, value);\n    }\n    if (helmetAttributes.indexOf(attribute) === -1) {\n      helmetAttributes.push(attribute);\n    }\n    const indexToSave = attributesToRemove.indexOf(attribute);\n    if (indexToSave !== -1) {\n      attributesToRemove.splice(indexToSave, 1);\n    }\n  }\n  for (let i = attributesToRemove.length - 1; i >= 0; i -= 1) {\n    elementTag.removeAttribute(attributesToRemove[i]);\n  }\n  if (helmetAttributes.length === attributesToRemove.length) {\n    elementTag.removeAttribute(HELMET_ATTRIBUTE);\n  } else if (elementTag.getAttribute(HELMET_ATTRIBUTE) !== attributeKeys.join(\",\")) {\n    elementTag.setAttribute(HELMET_ATTRIBUTE, attributeKeys.join(\",\"));\n  }\n};\nvar updateTitle = (title, attributes) => {\n  if (typeof title !== \"undefined\" && document.title !== title) {\n    document.title = flattenArray(title);\n  }\n  updateAttributes(\"title\" /* TITLE */, attributes);\n};\nvar commitTagChanges = (newState, cb) => {\n  const {\n    baseTag,\n    bodyAttributes,\n    htmlAttributes,\n    linkTags,\n    metaTags,\n    noscriptTags,\n    onChangeClientState,\n    scriptTags,\n    styleTags,\n    title,\n    titleAttributes\n  } = newState;\n  updateAttributes(\"body\" /* BODY */, bodyAttributes);\n  updateAttributes(\"html\" /* HTML */, htmlAttributes);\n  updateTitle(title, titleAttributes);\n  const tagUpdates = {\n    baseTag: updateTags(\"base\" /* BASE */, baseTag),\n    linkTags: updateTags(\"link\" /* LINK */, linkTags),\n    metaTags: updateTags(\"meta\" /* META */, metaTags),\n    noscriptTags: updateTags(\"noscript\" /* NOSCRIPT */, noscriptTags),\n    scriptTags: updateTags(\"script\" /* SCRIPT */, scriptTags),\n    styleTags: updateTags(\"style\" /* STYLE */, styleTags)\n  };\n  const addedTags = {};\n  const removedTags = {};\n  Object.keys(tagUpdates).forEach((tagType) => {\n    const { newTags, oldTags } = tagUpdates[tagType];\n    if (newTags.length) {\n      addedTags[tagType] = newTags;\n    }\n    if (oldTags.length) {\n      removedTags[tagType] = tagUpdates[tagType].oldTags;\n    }\n  });\n  if (cb) {\n    cb();\n  }\n  onChangeClientState(newState, addedTags, removedTags);\n};\nvar _helmetCallback = null;\nvar handleStateChangeOnClient = (newState) => {\n  if (_helmetCallback) {\n    cancelAnimationFrame(_helmetCallback);\n  }\n  if (newState.defer) {\n    _helmetCallback = requestAnimationFrame(() => {\n      commitTagChanges(newState, () => {\n        _helmetCallback = null;\n      });\n    });\n  } else {\n    commitTagChanges(newState);\n    _helmetCallback = null;\n  }\n};\nvar client_default = handleStateChangeOnClient;\n\n// src/Dispatcher.tsx\nvar HelmetDispatcher = class extends Component2 {\n  rendered = false;\n  shouldComponentUpdate(nextProps) {\n    return !shallowEqual(nextProps, this.props);\n  }\n  componentDidUpdate() {\n    this.emitChange();\n  }\n  componentWillUnmount() {\n    const { helmetInstances } = this.props.context;\n    helmetInstances.remove(this);\n    this.emitChange();\n  }\n  emitChange() {\n    const { helmetInstances, setHelmet } = this.props.context;\n    let serverState = null;\n    const state = reducePropsToState(\n      helmetInstances.get().map((instance) => {\n        const props = { ...instance.props };\n        delete props.context;\n        return props;\n      })\n    );\n    if (HelmetProvider.canUseDOM) {\n      client_default(state);\n    } else if (server_default) {\n      serverState = server_default(state);\n    }\n    setHelmet(serverState);\n  }\n  // componentWillMount will be deprecated\n  // for SSR, initialize on first render\n  // constructor is also unsafe in StrictMode\n  init() {\n    if (this.rendered) {\n      return;\n    }\n    this.rendered = true;\n    const { helmetInstances } = this.props.context;\n    helmetInstances.add(this);\n    this.emitChange();\n  }\n  render() {\n    this.init();\n    return null;\n  }\n};\n\n// src/index.tsx\nvar Helmet = class extends Component3 {\n  static defaultProps = {\n    defer: true,\n    encodeSpecialCharacters: true,\n    prioritizeSeoTags: false\n  };\n  shouldComponentUpdate(nextProps) {\n    return !fastCompare(without(this.props, \"helmetData\"), without(nextProps, \"helmetData\"));\n  }\n  mapNestedChildrenToProps(child, nestedChildren) {\n    if (!nestedChildren) {\n      return null;\n    }\n    switch (child.type) {\n      case \"script\" /* SCRIPT */:\n      case \"noscript\" /* NOSCRIPT */:\n        return {\n          innerHTML: nestedChildren\n        };\n      case \"style\" /* STYLE */:\n        return {\n          cssText: nestedChildren\n        };\n      default:\n        throw new Error(\n          `<${child.type} /> elements are self-closing and can not contain children. Refer to our API for more information.`\n        );\n    }\n  }\n  flattenArrayTypeChildren(child, arrayTypeChildren, newChildProps, nestedChildren) {\n    return {\n      ...arrayTypeChildren,\n      [child.type]: [\n        ...arrayTypeChildren[child.type] || [],\n        {\n          ...newChildProps,\n          ...this.mapNestedChildrenToProps(child, nestedChildren)\n        }\n      ]\n    };\n  }\n  mapObjectTypeChildren(child, newProps, newChildProps, nestedChildren) {\n    switch (child.type) {\n      case \"title\" /* TITLE */:\n        return {\n          ...newProps,\n          [child.type]: nestedChildren,\n          titleAttributes: { ...newChildProps }\n        };\n      case \"body\" /* BODY */:\n        return {\n          ...newProps,\n          bodyAttributes: { ...newChildProps }\n        };\n      case \"html\" /* HTML */:\n        return {\n          ...newProps,\n          htmlAttributes: { ...newChildProps }\n        };\n      default:\n        return {\n          ...newProps,\n          [child.type]: { ...newChildProps }\n        };\n    }\n  }\n  mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n    let newFlattenedProps = { ...newProps };\n    Object.keys(arrayTypeChildren).forEach((arrayChildName) => {\n      newFlattenedProps = {\n        ...newFlattenedProps,\n        [arrayChildName]: arrayTypeChildren[arrayChildName]\n      };\n    });\n    return newFlattenedProps;\n  }\n  warnOnInvalidChildren(child, nestedChildren) {\n    invariant(\n      VALID_TAG_NAMES.some((name) => child.type === name),\n      typeof child.type === \"function\" ? `You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.` : `Only elements types ${VALID_TAG_NAMES.join(\n        \", \"\n      )} are allowed. Helmet does not support rendering <${child.type}> elements. Refer to our API for more information.`\n    );\n    invariant(\n      !nestedChildren || typeof nestedChildren === \"string\" || Array.isArray(nestedChildren) && !nestedChildren.some((nestedChild) => typeof nestedChild !== \"string\"),\n      `Helmet expects a string as a child of <${child.type}>. Did you forget to wrap your children in braces? ( <${child.type}>{\\`\\`}</${child.type}> ) Refer to our API for more information.`\n    );\n    return true;\n  }\n  mapChildrenToProps(children, newProps) {\n    let arrayTypeChildren = {};\n    React3.Children.forEach(children, (child) => {\n      if (!child || !child.props) {\n        return;\n      }\n      const { children: nestedChildren, ...childProps } = child.props;\n      const newChildProps = Object.keys(childProps).reduce((obj, key) => {\n        obj[HTML_TAG_MAP[key] || key] = childProps[key];\n        return obj;\n      }, {});\n      let { type } = child;\n      if (typeof type === \"symbol\") {\n        type = type.toString();\n      } else {\n        this.warnOnInvalidChildren(child, nestedChildren);\n      }\n      switch (type) {\n        case \"Symbol(react.fragment)\" /* FRAGMENT */:\n          newProps = this.mapChildrenToProps(nestedChildren, newProps);\n          break;\n        case \"link\" /* LINK */:\n        case \"meta\" /* META */:\n        case \"noscript\" /* NOSCRIPT */:\n        case \"script\" /* SCRIPT */:\n        case \"style\" /* STYLE */:\n          arrayTypeChildren = this.flattenArrayTypeChildren(\n            child,\n            arrayTypeChildren,\n            newChildProps,\n            nestedChildren\n          );\n          break;\n        default:\n          newProps = this.mapObjectTypeChildren(child, newProps, newChildProps, nestedChildren);\n          break;\n      }\n    });\n    return this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n  }\n  render() {\n    const { children, ...props } = this.props;\n    let newProps = { ...props };\n    let { helmetData } = props;\n    if (children) {\n      newProps = this.mapChildrenToProps(children, newProps);\n    }\n    if (helmetData && !(helmetData instanceof HelmetData)) {\n      const data = helmetData;\n      helmetData = new HelmetData(data.context, true);\n      delete newProps.helmetData;\n    }\n    return helmetData ? /* @__PURE__ */ React3.createElement(HelmetDispatcher, { ...newProps, context: helmetData.value }) : /* @__PURE__ */ React3.createElement(Context.Consumer, null, (context) => /* @__PURE__ */ React3.createElement(HelmetDispatcher, { ...newProps, context }));\n  }\n};\nexport {\n  Helmet,\n  HelmetData,\n  HelmetProvider\n};\n"],"names":["TAG_NAMES","TAG_NAMES2","SEO_PRIORITY_TAGS","rel","type","charset","name","property","REACT_TAG_MAP","Object","values","accesskey","class","contenteditable","contextmenu","itemprop","tabindex","HELMET_ATTRIBUTE","entries","reduce","carry","key","value","getInnermostProperty","propsList","i","length","props","prototype","hasOwnProperty","call","getTitleFromPropsList","innermostTitle","innermostTemplate","Array","isArray","join","replace","innermostDefaultTitle","getOnChangeClientState","getAttributesFromPropsList","tagType","filter","map","tagAttrs","current","getBaseTagFromPropsList","primaryAttributes","reverse","innermostBaseTag","tag","keys","lowerCaseAttributeKey","toLowerCase","indexOf","concat","getTagsFromPropsList","tagName","approvedSeenTags","msg","console","warn","approvedTags","instanceTags","instanceSeenTags","primaryAttributeKey","keys2","attributeKey","forEach","push","tagUnion","getAnyTrueFromPropsList","checkedTag","index","flattenArray","possibleArray","prioritizer","elementsList","propsToMatch","acc","elementAttrs","checkIfPropsMatch","toMatch","includes","priority","default","SELF_CLOSING_TAGS","encodeSpecialCharacters","str","encode","String","generateElementAttributesAsString","attributes","attr","convertElementAttributesToReactProps","initProps","obj","generateTagsAsReactComponent","tags","mappedTag","attribute","mappedAttribute","content","innerHTML","cssText","dangerouslySetInnerHTML","__html","React","getMethodsForTag","toComponent","generateTitleAsReactComponent","_type","title","titleAttributes","toString","generateTitleAsString","attributeString","flattenedTitle","generateTagsAsString","t","attributeHtml","string","tagContent","isSelfClosing","server_default","baseTag","bodyAttributes","htmlAttributes","noscriptTags","styleTags","prioritizeSeoTags","linkTags","metaTags","scriptTags","priorityMethods","getPriorityMethods","meta","link","script","base","noscript","style","instances","isDocument","window","document","createElement","HelmetData","canUseDOM","context","setHelmet","serverState","this","helmet","helmetInstances","get","add","instance","remove","splice","constructor","Context","React2","HelmetProvider","_HelmetProvider","Component","static","helmetData","super","render","Provider","children","updateTags","headElement","head","querySelector","tagNodes","querySelectorAll","oldTags","slice","newTags","indexToDelete","newElement","styleSheet","appendChild","createTextNode","setAttribute","some","existingTag","isEqualNode","parentNode","removeChild","updateAttributes","elementTag","getElementsByTagName","helmetAttributeString","getAttribute","helmetAttributes","split","attributesToRemove","attributeKeys","indexToSave","removeAttribute","commitTagChanges","newState","cb","onChangeClientState","updateTitle","tagUpdates","addedTags","removedTags","_helmetCallback","Component2","Component3"],"sourceRoot":""}
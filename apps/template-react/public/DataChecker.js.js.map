{"version":3,"file":"DataChecker.js.js?01e8c","mappings":"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","sources":["webpack://@aztlan/template-react/../../node_modules/relay-runtime/lib/store/DataChecker.js"],"sourcesContent":["'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nvar _createForOfIteratorHelper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createForOfIteratorHelper\"));\nvar RelayRecordSourceMutator = require('../mutations/RelayRecordSourceMutator');\nvar RelayRecordSourceProxy = require('../mutations/RelayRecordSourceProxy');\nvar getOperation = require('../util/getOperation');\nvar RelayConcreteNode = require('../util/RelayConcreteNode');\nvar _require = require('./ClientID'),\n  isClientID = _require.isClientID;\nvar cloneRelayHandleSourceField = require('./cloneRelayHandleSourceField');\nvar cloneRelayScalarHandleSourceField = require('./cloneRelayScalarHandleSourceField');\nvar _require2 = require('./RelayConcreteVariables'),\n  getLocalVariables = _require2.getLocalVariables;\nvar RelayModernRecord = require('./RelayModernRecord');\nvar _require3 = require('./RelayRecordState'),\n  EXISTENT = _require3.EXISTENT,\n  UNKNOWN = _require3.UNKNOWN;\nvar RelayStoreUtils = require('./RelayStoreUtils');\nvar _require4 = require('./TypeID'),\n  TYPE_SCHEMA_TYPE = _require4.TYPE_SCHEMA_TYPE,\n  generateTypeID = _require4.generateTypeID;\nvar invariant = require('invariant');\nvar ACTOR_CHANGE = RelayConcreteNode.ACTOR_CHANGE,\n  CONDITION = RelayConcreteNode.CONDITION,\n  CLIENT_COMPONENT = RelayConcreteNode.CLIENT_COMPONENT,\n  CLIENT_EXTENSION = RelayConcreteNode.CLIENT_EXTENSION,\n  CLIENT_EDGE_TO_CLIENT_OBJECT = RelayConcreteNode.CLIENT_EDGE_TO_CLIENT_OBJECT,\n  DEFER = RelayConcreteNode.DEFER,\n  FRAGMENT_SPREAD = RelayConcreteNode.FRAGMENT_SPREAD,\n  INLINE_FRAGMENT = RelayConcreteNode.INLINE_FRAGMENT,\n  LINKED_FIELD = RelayConcreteNode.LINKED_FIELD,\n  LINKED_HANDLE = RelayConcreteNode.LINKED_HANDLE,\n  MODULE_IMPORT = RelayConcreteNode.MODULE_IMPORT,\n  RELAY_RESOLVER = RelayConcreteNode.RELAY_RESOLVER,\n  RELAY_LIVE_RESOLVER = RelayConcreteNode.RELAY_LIVE_RESOLVER,\n  SCALAR_FIELD = RelayConcreteNode.SCALAR_FIELD,\n  SCALAR_HANDLE = RelayConcreteNode.SCALAR_HANDLE,\n  STREAM = RelayConcreteNode.STREAM,\n  TYPE_DISCRIMINATOR = RelayConcreteNode.TYPE_DISCRIMINATOR;\nvar getModuleOperationKey = RelayStoreUtils.getModuleOperationKey,\n  getStorageKey = RelayStoreUtils.getStorageKey,\n  getArgumentValues = RelayStoreUtils.getArgumentValues;\nfunction check(getSourceForActor, getTargetForActor, defaultActorIdentifier, selector, handlers, operationLoader, getDataID, shouldProcessClientComponents) {\n  var dataID = selector.dataID,\n    node = selector.node,\n    variables = selector.variables;\n  var checker = new DataChecker(getSourceForActor, getTargetForActor, defaultActorIdentifier, variables, handlers, operationLoader, getDataID, shouldProcessClientComponents);\n  return checker.check(node, dataID);\n}\nvar DataChecker = /*#__PURE__*/function () {\n  function DataChecker(getSourceForActor, getTargetForActor, defaultActorIdentifier, variables, handlers, operationLoader, getDataID, shouldProcessClientComponents) {\n    this._getSourceForActor = getSourceForActor;\n    this._getTargetForActor = getTargetForActor;\n    this._getDataID = getDataID;\n    this._source = getSourceForActor(defaultActorIdentifier);\n    this._mutatorRecordSourceProxyCache = new Map();\n    var _this$_getMutatorAndR = this._getMutatorAndRecordProxyForActor(defaultActorIdentifier),\n      mutator = _this$_getMutatorAndR[0],\n      recordSourceProxy = _this$_getMutatorAndR[1];\n    this._mostRecentlyInvalidatedAt = null;\n    this._handlers = handlers;\n    this._mutator = mutator;\n    this._operationLoader = operationLoader !== null && operationLoader !== void 0 ? operationLoader : null;\n    this._recordSourceProxy = recordSourceProxy;\n    this._recordWasMissing = false;\n    this._variables = variables;\n    this._shouldProcessClientComponents = shouldProcessClientComponents;\n  }\n  var _proto = DataChecker.prototype;\n  _proto._getMutatorAndRecordProxyForActor = function _getMutatorAndRecordProxyForActor(actorIdentifier) {\n    var tuple = this._mutatorRecordSourceProxyCache.get(actorIdentifier);\n    if (tuple == null) {\n      var target = this._getTargetForActor(actorIdentifier);\n      var mutator = new RelayRecordSourceMutator(this._getSourceForActor(actorIdentifier), target);\n      var recordSourceProxy = new RelayRecordSourceProxy(mutator, this._getDataID, undefined, this._handlers);\n      tuple = [mutator, recordSourceProxy];\n      this._mutatorRecordSourceProxyCache.set(actorIdentifier, tuple);\n    }\n    return tuple;\n  };\n  _proto.check = function check(node, dataID) {\n    this._assignClientAbstractTypes(node);\n    this._traverse(node, dataID);\n    return this._recordWasMissing === true ? {\n      status: 'missing',\n      mostRecentlyInvalidatedAt: this._mostRecentlyInvalidatedAt\n    } : {\n      status: 'available',\n      mostRecentlyInvalidatedAt: this._mostRecentlyInvalidatedAt\n    };\n  };\n  _proto._getVariableValue = function _getVariableValue(name) {\n    !this._variables.hasOwnProperty(name) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayAsyncLoader(): Undefined variable `%s`.', name) : invariant(false) : void 0;\n    return this._variables[name];\n  };\n  _proto._handleMissing = function _handleMissing() {\n    this._recordWasMissing = true;\n  };\n  _proto._handleMissingScalarField = function _handleMissingScalarField(field, dataID) {\n    if (field.name === 'id' && field.alias == null && isClientID(dataID)) {\n      return undefined;\n    }\n    var args = field.args != undefined ? getArgumentValues(field.args, this._variables) : {};\n    var _iterator = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var handler = _step.value;\n        if (handler.kind === 'scalar') {\n          var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);\n          if (newValue !== undefined) {\n            return newValue;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    this._handleMissing();\n  };\n  _proto._handleMissingLinkField = function _handleMissingLinkField(field, dataID) {\n    var args = field.args != undefined ? getArgumentValues(field.args, this._variables) : {};\n    var _iterator2 = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var handler = _step2.value;\n        if (handler.kind === 'linked') {\n          var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);\n          if (newValue !== undefined && (newValue === null || this._mutator.getStatus(newValue) === EXISTENT)) {\n            return newValue;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n    this._handleMissing();\n  };\n  _proto._handleMissingPluralLinkField = function _handleMissingPluralLinkField(field, dataID) {\n    var _this = this;\n    var args = field.args != undefined ? getArgumentValues(field.args, this._variables) : {};\n    var _iterator3 = (0, _createForOfIteratorHelper2[\"default\"])(this._handlers),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var handler = _step3.value;\n        if (handler.kind === 'pluralLinked') {\n          var newValue = handler.handle(field, this._recordSourceProxy.get(dataID), args, this._recordSourceProxy);\n          if (newValue != null) {\n            var allItemsKnown = newValue.every(function (linkedID) {\n              return linkedID != null && _this._mutator.getStatus(linkedID) === EXISTENT;\n            });\n            if (allItemsKnown) {\n              return newValue;\n            }\n          } else if (newValue === null) {\n            return null;\n          }\n        }\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    this._handleMissing();\n  };\n  _proto._traverse = function _traverse(node, dataID) {\n    var status = this._mutator.getStatus(dataID);\n    if (status === UNKNOWN) {\n      this._handleMissing();\n    }\n    if (status === EXISTENT) {\n      var record = this._source.get(dataID);\n      var invalidatedAt = RelayModernRecord.getInvalidationEpoch(record);\n      if (invalidatedAt != null) {\n        this._mostRecentlyInvalidatedAt = this._mostRecentlyInvalidatedAt != null ? Math.max(this._mostRecentlyInvalidatedAt, invalidatedAt) : invalidatedAt;\n      }\n      this._traverseSelections(node.selections, dataID);\n    }\n  };\n  _proto._traverseSelections = function _traverseSelections(selections, dataID) {\n    var _this2 = this;\n    selections.forEach(function (selection) {\n      switch (selection.kind) {\n        case SCALAR_FIELD:\n          _this2._checkScalar(selection, dataID);\n          break;\n        case LINKED_FIELD:\n          if (selection.plural) {\n            _this2._checkPluralLink(selection, dataID);\n          } else {\n            _this2._checkLink(selection, dataID);\n          }\n          break;\n        case ACTOR_CHANGE:\n          _this2._checkActorChange(selection.linkedField, dataID);\n          break;\n        case CONDITION:\n          var conditionValue = Boolean(_this2._getVariableValue(selection.condition));\n          if (conditionValue === selection.passingValue) {\n            _this2._traverseSelections(selection.selections, dataID);\n          }\n          break;\n        case INLINE_FRAGMENT:\n          {\n            var _abstractKey = selection.abstractKey;\n            if (_abstractKey == null) {\n              var typeName = _this2._mutator.getType(dataID);\n              if (typeName === selection.type) {\n                _this2._traverseSelections(selection.selections, dataID);\n              }\n            } else {\n              var _recordType = _this2._mutator.getType(dataID);\n              !(_recordType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected record `%s` to have a known type', dataID) : invariant(false) : void 0;\n              var _typeID = generateTypeID(_recordType);\n              var _implementsInterface = _this2._mutator.getValue(_typeID, _abstractKey);\n              if (_implementsInterface === true) {\n                _this2._traverseSelections(selection.selections, dataID);\n              } else if (_implementsInterface == null) {\n                _this2._handleMissing();\n              }\n            }\n            break;\n          }\n        case LINKED_HANDLE:\n          {\n            var handleField = cloneRelayHandleSourceField(selection, selections, _this2._variables);\n            if (handleField.plural) {\n              _this2._checkPluralLink(handleField, dataID);\n            } else {\n              _this2._checkLink(handleField, dataID);\n            }\n            break;\n          }\n        case SCALAR_HANDLE:\n          {\n            var _handleField = cloneRelayScalarHandleSourceField(selection, selections, _this2._variables);\n            _this2._checkScalar(_handleField, dataID);\n            break;\n          }\n        case MODULE_IMPORT:\n          _this2._checkModuleImport(selection, dataID);\n          break;\n        case DEFER:\n        case STREAM:\n          _this2._traverseSelections(selection.selections, dataID);\n          break;\n        case FRAGMENT_SPREAD:\n          var prevVariables = _this2._variables;\n          _this2._variables = getLocalVariables(_this2._variables, selection.fragment.argumentDefinitions, selection.args);\n          _this2._traverseSelections(selection.fragment.selections, dataID);\n          _this2._variables = prevVariables;\n          break;\n        case CLIENT_EXTENSION:\n          var recordWasMissing = _this2._recordWasMissing;\n          _this2._traverseSelections(selection.selections, dataID);\n          _this2._recordWasMissing = recordWasMissing;\n          break;\n        case TYPE_DISCRIMINATOR:\n          var abstractKey = selection.abstractKey;\n          var recordType = _this2._mutator.getType(dataID);\n          !(recordType != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected record `%s` to have a known type', dataID) : invariant(false) : void 0;\n          var typeID = generateTypeID(recordType);\n          var implementsInterface = _this2._mutator.getValue(typeID, abstractKey);\n          if (implementsInterface == null) {\n            _this2._handleMissing();\n          }\n          break;\n        case CLIENT_COMPONENT:\n          if (_this2._shouldProcessClientComponents === false) {\n            break;\n          }\n          _this2._traverseSelections(selection.fragment.selections, dataID);\n          break;\n        case RELAY_RESOLVER:\n          _this2._checkResolver(selection, dataID);\n          break;\n        case RELAY_LIVE_RESOLVER:\n          _this2._checkResolver(selection, dataID);\n          break;\n        case CLIENT_EDGE_TO_CLIENT_OBJECT:\n          _this2._checkResolver(selection.backingField, dataID);\n          break;\n        default:\n          selection;\n          !false ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'RelayAsyncLoader(): Unexpected ast kind `%s`.', selection.kind) : invariant(false) : void 0;\n      }\n    });\n  };\n  _proto._checkResolver = function _checkResolver(resolver, dataID) {\n    if (resolver.fragment) {\n      this._traverseSelections([resolver.fragment], dataID);\n    }\n  };\n  _proto._checkModuleImport = function _checkModuleImport(moduleImport, dataID) {\n    var operationLoader = this._operationLoader;\n    !(operationLoader !== null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'DataChecker: Expected an operationLoader to be configured when using `@module`.') : invariant(false) : void 0;\n    var operationKey = getModuleOperationKey(moduleImport.documentName);\n    var operationReference = this._mutator.getValue(dataID, operationKey);\n    if (operationReference == null) {\n      if (operationReference === undefined) {\n        this._handleMissing();\n      }\n      return;\n    }\n    var normalizationRootNode = operationLoader.get(operationReference);\n    if (normalizationRootNode != null) {\n      var operation = getOperation(normalizationRootNode);\n      var prevVariables = this._variables;\n      this._variables = getLocalVariables(this._variables, operation.argumentDefinitions, moduleImport.args);\n      this._traverse(operation, dataID);\n      this._variables = prevVariables;\n    } else {\n      this._handleMissing();\n    }\n  };\n  _proto._checkScalar = function _checkScalar(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var fieldValue = this._mutator.getValue(dataID, storageKey);\n    if (fieldValue === undefined) {\n      fieldValue = this._handleMissingScalarField(field, dataID);\n      if (fieldValue !== undefined) {\n        this._mutator.setValue(dataID, storageKey, fieldValue);\n      }\n    }\n  };\n  _proto._checkLink = function _checkLink(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedID = this._mutator.getLinkedRecordID(dataID, storageKey);\n    if (linkedID === undefined) {\n      linkedID = this._handleMissingLinkField(field, dataID);\n      if (linkedID != null) {\n        this._mutator.setLinkedRecordID(dataID, storageKey, linkedID);\n      } else if (linkedID === null) {\n        this._mutator.setValue(dataID, storageKey, null);\n      }\n    }\n    if (linkedID != null) {\n      this._traverse(field, linkedID);\n    }\n  };\n  _proto._checkPluralLink = function _checkPluralLink(field, dataID) {\n    var _this3 = this;\n    var storageKey = getStorageKey(field, this._variables);\n    var linkedIDs = this._mutator.getLinkedRecordIDs(dataID, storageKey);\n    if (linkedIDs === undefined) {\n      linkedIDs = this._handleMissingPluralLinkField(field, dataID);\n      if (linkedIDs != null) {\n        this._mutator.setLinkedRecordIDs(dataID, storageKey, linkedIDs);\n      } else if (linkedIDs === null) {\n        this._mutator.setValue(dataID, storageKey, null);\n      }\n    }\n    if (linkedIDs) {\n      linkedIDs.forEach(function (linkedID) {\n        if (linkedID != null) {\n          _this3._traverse(field, linkedID);\n        }\n      });\n    }\n  };\n  _proto._checkActorChange = function _checkActorChange(field, dataID) {\n    var storageKey = getStorageKey(field, this._variables);\n    var record = this._source.get(dataID);\n    var tuple = record != null ? RelayModernRecord.getActorLinkedRecordID(record, storageKey) : record;\n    if (tuple == null) {\n      if (tuple === undefined) {\n        this._handleMissing();\n      }\n    } else {\n      var actorIdentifier = tuple[0],\n        linkedID = tuple[1];\n      var prevSource = this._source;\n      var prevMutator = this._mutator;\n      var prevRecordSourceProxy = this._recordSourceProxy;\n      var _this$_getMutatorAndR2 = this._getMutatorAndRecordProxyForActor(actorIdentifier),\n        mutator = _this$_getMutatorAndR2[0],\n        recordSourceProxy = _this$_getMutatorAndR2[1];\n      this._source = this._getSourceForActor(actorIdentifier);\n      this._mutator = mutator;\n      this._recordSourceProxy = recordSourceProxy;\n      this._assignClientAbstractTypes(field);\n      this._traverse(field, linkedID);\n      this._source = prevSource;\n      this._mutator = prevMutator;\n      this._recordSourceProxy = prevRecordSourceProxy;\n    }\n  };\n  _proto._assignClientAbstractTypes = function _assignClientAbstractTypes(node) {\n    var clientAbstractTypes = node.clientAbstractTypes;\n    if (clientAbstractTypes != null) {\n      for (var _i = 0, _Object$keys = Object.keys(clientAbstractTypes); _i < _Object$keys.length; _i++) {\n        var abstractType = _Object$keys[_i];\n        var _iterator4 = (0, _createForOfIteratorHelper2[\"default\"])(clientAbstractTypes[abstractType]),\n          _step4;\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var concreteType = _step4.value;\n            var typeID = generateTypeID(concreteType);\n            if (this._source.get(typeID) == null) {\n              this._mutator.create(typeID, TYPE_SCHEMA_TYPE);\n            }\n            if (this._mutator.getValue(typeID, abstractType) == null) {\n              this._mutator.setValue(typeID, abstractType, true);\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      }\n    }\n  };\n  return DataChecker;\n}();\nmodule.exports = {\n  check: check\n};"],"names":["_createForOfIteratorHelper2","_interopRequireDefault","require","RelayRecordSourceMutator","RelayRecordSourceProxy","getOperation","RelayConcreteNode","isClientID","cloneRelayHandleSourceField","cloneRelayScalarHandleSourceField","getLocalVariables","RelayModernRecord","_require3","EXISTENT","UNKNOWN","RelayStoreUtils","_require4","TYPE_SCHEMA_TYPE","generateTypeID","invariant","ACTOR_CHANGE","CONDITION","CLIENT_COMPONENT","CLIENT_EXTENSION","CLIENT_EDGE_TO_CLIENT_OBJECT","DEFER","FRAGMENT_SPREAD","INLINE_FRAGMENT","LINKED_FIELD","LINKED_HANDLE","MODULE_IMPORT","RELAY_RESOLVER","RELAY_LIVE_RESOLVER","SCALAR_FIELD","SCALAR_HANDLE","STREAM","TYPE_DISCRIMINATOR","getModuleOperationKey","getStorageKey","getArgumentValues","DataChecker","getSourceForActor","getTargetForActor","defaultActorIdentifier","variables","handlers","operationLoader","getDataID","shouldProcessClientComponents","this","_getSourceForActor","_getTargetForActor","_getDataID","_source","_mutatorRecordSourceProxyCache","Map","_this$_getMutatorAndR","_getMutatorAndRecordProxyForActor","mutator","recordSourceProxy","_mostRecentlyInvalidatedAt","_handlers","_mutator","_operationLoader","_recordSourceProxy","_recordWasMissing","_variables","_shouldProcessClientComponents","_proto","prototype","actorIdentifier","tuple","get","target","undefined","set","check","node","dataID","_assignClientAbstractTypes","_traverse","status","mostRecentlyInvalidatedAt","_getVariableValue","name","hasOwnProperty","_handleMissing","_handleMissingScalarField","field","alias","_step","args","_iterator","s","n","done","handler","value","kind","newValue","handle","err","e","f","_handleMissingLinkField","_step2","_iterator2","getStatus","_handleMissingPluralLinkField","_step3","_this","_iterator3","every","linkedID","record","invalidatedAt","getInvalidationEpoch","Math","max","_traverseSelections","selections","_this2","forEach","selection","_checkScalar","plural","_checkPluralLink","_checkLink","_checkActorChange","linkedField","Boolean","condition","passingValue","_abstractKey","abstractKey","getType","type","_recordType","_typeID","_implementsInterface","getValue","handleField","_handleField","_checkModuleImport","prevVariables","fragment","argumentDefinitions","recordWasMissing","recordType","typeID","_checkResolver","backingField","resolver","moduleImport","operationKey","documentName","operationReference","normalizationRootNode","operation","storageKey","fieldValue","setValue","getLinkedRecordID","setLinkedRecordID","_this3","linkedIDs","getLinkedRecordIDs","setLinkedRecordIDs","getActorLinkedRecordID","prevSource","prevMutator","prevRecordSourceProxy","_this$_getMutatorAndR2","clientAbstractTypes","_i","_Object$keys","Object","keys","length","_step4","abstractType","_iterator4","concreteType","create","module","exports","selector"],"sourceRoot":""}
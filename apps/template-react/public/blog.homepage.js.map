{"version":3,"file":"blog.homepage.js?b087c","mappings":"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","sources":["webpack://@aztlan/template-react/./src/modules/base.homepage/pages/Home.tsx","webpack://@aztlan/template-react/./src/modules/base.homepage/ui/QueryTester/QueryTester.tsx","webpack://@aztlan/template-react/./src/modules/base.homepage/ui/QueryTester/__generated__/QueryTesterFragment.graphql.ts","webpack://@aztlan/template-react/./src/modules/base.homepage/ui/QueryTester/__generated__/QueryTesterQuery.graphql.ts","webpack://@aztlan/template-react/./src/modules/base.homepage/ui/QueryTester/index.ts","webpack://@aztlan/template-react/./src/modules/base.homepage/ui/index.ts"],"sourcesContent":["/* @aztlan/generator-front 0.4.0 */\nimport * as React from 'react'\nimport { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useLazyLoadQuery } from 'react-relay'\nimport Template from '../../common/templates/Base'\nimport { QueryTester } from '../ui'\nimport { ThemeSwitcher } from '../../common/ui'\n\nfunction Home() {\n  const data = useLazyLoadQuery(\n    QueryTester.QUERY,\n    {},\n    { fetchPolicy: 'store-or-network' },\n  )\n  return (\n    <Template title=\"Homepage\">\n      <ThemeSwitcher />\n      <QueryTester data={data} />\n      <p>Welcome to the homepage of our site.</p>\n    </Template>\n  )\n}\n\nexport default Home\n","/* @aztlan/generator-front 0.2.0 */\nimport * as React from 'react'\n\nimport { useInsertionEffect } from 'react'\n\nimport PropTypes from 'prop-types'\n\n// @ts-ignore\nimport styleNames from '@aztlan/bem/exports.scss'\n\nimport { useFragment, useRelayEnvironment } from 'react-relay'\n\n// Local Definitions\n\nconst baseClassName = styleNames.base\n\nconst componentClassName = 'query-tester'\nconst FRAGMENT = graphql`\n  fragment QueryTesterFragment on Query {\n    time\n  }\n`\n\nconst QUERY = graphql`\n  query QueryTesterQuery {\n    ...QueryTesterFragment\n  }\n`\n\n/**\n * This is the component description.\n */\nfunction QueryTester({\n  id,\n  className: userClassName,\n  style,\n  children,\n  data,\n  ...otherProps\n  // ...otherProps\n}) {\n  useInsertionEffect(() => {\n    // @ts-ignore\n    import('./styles.scss')\n  }, [])\n\n  const { time } = useFragment(FRAGMENT, data)\n\n  return (\n    <div\n      id={id}\n      className={[baseClassName, componentClassName, userClassName]\n        .filter((e) => e)\n        .join(' ')}\n      style={style}\n      // {...otherProps}\n    >\n      <p>\n        TIME IS\n        {' '}\n        {time}\n        {children}\n      </p>\n    </div>\n  )\n}\n\nQueryTester.propTypes = {\n  /**\n   * The HTML id for this element\n   */\n  id: PropTypes.string,\n\n  /**\n   * The HTML class names for this element\n   */\n  className: PropTypes.string,\n\n  /**\n   * The React-written, css properties for this element.\n   */\n  style: PropTypes.objectOf(PropTypes.string),\n\n  /**\n   *  The children JSX\n   */\n  children: PropTypes.node,\n}\n\nQueryTester.defaultProps = {\n  // someProp:false\n}\nQueryTester.QUERY = QUERY\nQueryTester.FRAGMENT = FRAGMENT\n\nexport default QueryTester\n","/**\n * @generated SignedSource<<8371248ec54f98c9e1e4120f2ecd0cf8>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { Fragment, ReaderFragment } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type QueryTesterFragment$data = {\n  readonly time: any | null | undefined;\n  readonly \" $fragmentType\": \"QueryTesterFragment\";\n};\nexport type QueryTesterFragment$key = {\n  readonly \" $data\"?: QueryTesterFragment$data;\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QueryTesterFragment\">;\n};\n\nconst node: ReaderFragment = {\n  \"argumentDefinitions\": [],\n  \"kind\": \"Fragment\",\n  \"metadata\": null,\n  \"name\": \"QueryTesterFragment\",\n  \"selections\": [\n    {\n      \"alias\": null,\n      \"args\": null,\n      \"kind\": \"ScalarField\",\n      \"name\": \"time\",\n      \"storageKey\": null\n    }\n  ],\n  \"type\": \"Query\",\n  \"abstractKey\": null\n};\n\n(node as any).hash = \"d1cdb0deb371cd84d96ec9c6169e1255\";\n\nexport default node;\n","/**\n * @generated SignedSource<<76d71db0352e4f1ed58b4699c47864ae>>\n * @lightSyntaxTransform\n * @nogrep\n */\n\n/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n\nimport { ConcreteRequest, Query } from 'relay-runtime';\nimport { FragmentRefs } from \"relay-runtime\";\nexport type QueryTesterQuery$variables = Record<PropertyKey, never>;\nexport type QueryTesterQuery$data = {\n  readonly \" $fragmentSpreads\": FragmentRefs<\"QueryTesterFragment\">;\n};\nexport type QueryTesterQuery = {\n  response: QueryTesterQuery$data;\n  variables: QueryTesterQuery$variables;\n};\n\nconst node: ConcreteRequest = {\n  \"fragment\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Fragment\",\n    \"metadata\": null,\n    \"name\": \"QueryTesterQuery\",\n    \"selections\": [\n      {\n        \"args\": null,\n        \"kind\": \"FragmentSpread\",\n        \"name\": \"QueryTesterFragment\"\n      }\n    ],\n    \"type\": \"Query\",\n    \"abstractKey\": null\n  },\n  \"kind\": \"Request\",\n  \"operation\": {\n    \"argumentDefinitions\": [],\n    \"kind\": \"Operation\",\n    \"name\": \"QueryTesterQuery\",\n    \"selections\": [\n      {\n        \"alias\": null,\n        \"args\": null,\n        \"kind\": \"ScalarField\",\n        \"name\": \"time\",\n        \"storageKey\": null\n      }\n    ]\n  },\n  \"params\": {\n    \"cacheID\": \"cb2c901c92e521a25b2ac76857b5e322\",\n    \"id\": null,\n    \"metadata\": {},\n    \"name\": \"QueryTesterQuery\",\n    \"operationKind\": \"query\",\n    \"text\": \"query QueryTesterQuery {\\n  ...QueryTesterFragment\\n}\\n\\nfragment QueryTesterFragment on Query {\\n  time\\n}\\n\"\n  }\n};\n\n(node as any).hash = \"920e8fa8275613b7ca9be05c137e7fbf\";\n\nexport default node;\n","/* @aztlan/generator-front 0.2.0 */\nexport { default as QueryTester } from './QueryTester'\n","export { QueryTester } from './QueryTester'\n"],"names":["React","useLazyLoadQuery","Template","QueryTester","ThemeSwitcher","Home","data","QUERY","fetchPolicy","createElement","title","useInsertionEffect","PropTypes","styleNames","useFragment","baseClassName","base","componentClassName","FRAGMENT","_QueryTesterFragment","require","hash","console","error","_QueryTesterQuery","_ref","id","userClassName","className","style","children","otherProps","_objectWithoutProperties","_excluded","_useFragment","time","filter","e","join","propTypes","string","objectOf","node","defaultProps","default"],"sourceRoot":""}
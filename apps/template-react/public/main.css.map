{"version":3,"file":"main.css","mappings":"AAEA,wBACE,SACA,kBACA,eACA,qBACA,0EACA,gBACA,cAGF,kBACE,SACA,kBACA,eACA,qBACA,0EACA,gBACA,cAGF,2BACE,yBACA,WAGF,6BACE,+BACA,2CACA,WAGF,yBACE,eACA,kBAGF,0BACE,eACA,kBAGF,yBACE,eACA,kB;AC7CF,kBACE,sEACA,uCACA,kBACA,aACA,mBACA,8BAGF,sBACE,qBACA,mBAGF,qBACE,gBACA,eACA,cACA,sBACA,qBACA,mBAGF,gCACE,iBAGF,2BACE,WACA,eACA,kB;AC9BF,gBACE,sEACA,eACA,iBACA,kBACA,cACA,gBACA,WAGF,mBACE,gBACA,eACA,cACA,eACA,qBACA,mBAGF,kBACE,aAGF,kBACE,qBACA,cAGF,mBACE,kBACA,aAGF,mBACE,kBAGF,qBACE,qBACA,kBACA,eACA,iBACA,gBACA,mBACA,cACA,iBACA,kBACA,mBAGF,6BACE,eACA,iBACA,gBACA,mBAGF,iCACE,qBACA,YACA,WACA,iBACA,mBACA,eAGF,sCACE,a;AC1DE,oCCoCF,MACE,aACA,6CAIJ,MACE,YACA,uCACA,WAGF,MAEE,kCADA,aACA,wBACA,qFAGF,WACE,iBAIA,gBACE,oCAIJ,OACE,yBAQF,4BAKE,4BApDA,CAoDA,oFApDA,CAqDA,wBArDA,CAqDA,gFArDA,CD1BE,oCCyEJ,oBAEI,2BACA,YAOF,SACE,mBAFS,CAIX,QACE,YACA,uBALF,SACE,mBAFS,CAIX,QACE,YACA,uBALF,SACE,mBAFS,CAIX,QACE,YACA,uBALF,SACE,mBAFS,CAIX,QACE,YACA,uBALF,SACE,mBAFS,CAIX,QACE,YACA,uBALF,SACE,mBAFS,CAIX,QACE,YACA,uBALF,SACE,mBAFS,CAIX,QACE,YACA,uBALF,SACE,mBAFS,CAIX,QACE,YACA,uBDxFA,oCC6FA,YACE,mBAHO,CAKT,WACE,YACA,uBALF,YACE,mBAHO,CAKT,WACE,YACA,uBALF,YACE,mBAHO,CAKT,WACE,YACA,uBALF,YACE,mBAHO,CAKT,WACE,YACA,uBALF,YACE,mBAHO,CAKT,WACE,YACA,uBALF,YACE,mBAHO,CAKT,WACE,YACA,uBALF,YACE,mBAHO,CAKT,WACE,YACA,uBALF,YACE,mBAHO,CAKT,WACE,YACA,uBALF,YACE,mBAHO,CAKT,WACE,YACA,uBALF,aACE,oBAHO,CAKT,YACE,aACA,wBALF,aACE,oBAHO,CAKT,YACE,aACA,wBALF,aACE,oBAHO,CAKT,YACE,aACA,wBALF,aACE,oBAHO,CAKT,YACE,aACA,wBALF,aACE,oBAHO,CAKT,YACE,aACA,yBCrCN,yBA0DI,+BAGE,mBACA,6BACA,6BACA,yBANF,wCAGE,sBACA,gCACA,gCACA,4BANF,wCAGE,sBACA,gCACA,gCACA,4BANF,qCAGE,qBACA,+BACA,+BACA,2BANF,qCAGE,qBACA,+BACA,+BACA,2BANF,wCAGE,sBACA,gCACA,gCACA,4BANF,qCAGE,qBACA,+BACA,+BACA,2BANF,kCAGE,oBACA,8BACA,8BACA,0BANF,wCAGE,sBACA,gCACA,gCACA,4BANF,kCAGE,oBACA,8BACA,8BACA,0BA5BF,mBAnBA,cACA,mBACA,mBACA,cAHA,iBACA,sBACA,sBACA,iBAHA,iBACA,sBACA,sBACA,iBAHA,gBACA,qBACA,qBACA,gBAHA,gBACA,qBACA,qBACA,gBAHA,iBACA,sBACA,sBACA,iBAHA,gBACA,qBACA,qBACA,gBAHA,eACA,oBACA,oBACA,eAHA,iBACA,sBACA,sBACA,iBAHA,eACA,oBACA,oBACA,eAsBA,YAzBA,cACA,mBACA,mBACA,cAHA,iBACA,sBACA,sBACA,iBAHA,iBACA,sBACA,sBACA,iBAHA,gBACA,qBACA,qBACA,gBAHA,gBACA,qBACA,qBACA,gBAHA,iBACA,sBACA,sBACA,iBAHA,gBACA,qBACA,qBACA,gBAHA,eACA,oBACA,oBACA,eAHA,iBACA,sBACA,sBACA,iBAHA,eACA,oBACA,oBACA,eAHA,kBACA,uBACA,uBACA,kBAHA,oBACA,yBACA,yBACA,oBAHA,kBACA,uBACA,uBACA,kBAHA,kBACA,uBACA,uBACA,kBAHA,kBACA,uBACA,uBACA,kB","sources":["webpack://@aztlan/template-react/../../packages/design-system/dist/esm/button.scss","webpack://@aztlan/template-react/../../packages/design-system/dist/esm/header.scss","webpack://@aztlan/template-react/../../packages/design-system/dist/esm/page.scss","webpack://@aztlan/template-react/../../node_modules/@aztlan/mixins/src/_media.scss","webpack://@aztlan/template-react/../../node_modules/@aztlan/grid/src/main.scss","webpack://@aztlan/template-react/../../packages/base-styles/node_modules/@aztlan/swatch/src/_mixins.scss"],"sourcesContent":["@use \"@aztlan/bem\";\n\n.#{bem.$modifier-ghost}.storybook-button {\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  font-family: \"Nunito Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 700;\n  line-height: 1;\n}\n\n.storybook-button {\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  font-family: \"Nunito Sans\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n  font-weight: 700;\n  line-height: 1;\n}\n\n.storybook-button--primary {\n  background-color: #1ea7fd;\n  color: white;\n}\n\n.storybook-button--secondary {\n  background-color: transparent;\n  box-shadow: rgb(0 0 0 / 15%) 0 0 0 1px inset;\n  color: #333333;\n}\n\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n","/* stylelint-disable scss/media-feature-value-dollar-variable -- We need to have a 1px delta */\n\n@mixin media($from:null, $to:null) {\n  @if $from and $to {\n    @media screen and (min-width: $from) and (max-width: $to - 1px) {\n      @content;\n    }\n  }\n  @else if $from {\n    @media screen and (min-width: $from) {\n      @content;\n    }\n  }\n  @else if $to {\n    @media screen and (max-width: $to - 1px) {\n      @content;\n    }\n  }\n}\n","// TODO understand why `main` export doesn't work\n\n@use \"@aztlan/mixins/src\" as mixins;\n\n// TODO Cleanup and mixins\n$sm-md:801px;\n$md-lg:1400px;\n\n\n/* The following variables can be configured when using the library */\n\n/* Custom property and class names */\n$default-columns-property:\"columns\" !default;\n$default-column-width-property:\"column-width\" !default;\n$default-gap-property:\"gap\" !default;\n$default-start-class:\"start\" !default;\n$default-span-class:\"span\" !default;\n$default-class-prefix:\"\" !default;\n$md-class-prefix:\"#{$default-class-prefix}md-\" !default;\n\n/* Number of columns */\n$md-columns:14 !default;\n$default-columns:8 !default;\n\n/* Grid gap */\n$default-gap:1rem !default;\n\n/* Library definitions start here */\n\n$default-column-width:\n  calc((100vw - (#{$default-columns} + 1) * #{$default-gap}) / #{$default-columns});\n$md-column-width:\n  calc((100vw - (#{$md-columns} + 1) * #{$default-gap}) / #{$md-columns});\n\n$manual-column-width:\n  calc(\n    var(--#{$default-column-width-property})\n    * var(--#{$default-columns-property})\n    + var(--#{$default-gap-property})\n    * (var(--#{$default-columns-property})\n    - 1\n  )\n);\n\n@include mixins.media($from:$sm-md) {\n  :root {\n    --#{$default-columns-property}: #{$md-columns};\n    --#{$default-column-width-property}: #{$md-column-width};\n  }\n}\n\n:root {\n  --#{$default-columns-property}: #{$default-columns};\n  --#{$default-column-width-property}: #{$default-column-width};\n  --#{$default-gap-property}: #{$default-gap};\n}\n\n.grid {\n  display: grid;\n  gap: var(--#{$default-gap-property});\n  grid-template-columns: repeat(var(--#{$default-columns-property}), 1fr);\n}\n\n.container {\n  grid-column: 1/-1;\n}\n\n.section {\n  &.padded {\n    padding: 0 var(--#{$default-gap-property});\n  }\n}\n\n.dense {\n  grid-auto-flow: row dense;\n}\n\n.manual {\n  min-width: $manual-column-width;\n  width: $manual-column-width;\n}\n\n.manual-mobile-only {\n  @include mixins.media($from:$sm-md) {\n    min-width: unset;\n    width: unset;\n  }\n  min-width: $manual-column-width;\n  width: $manual-column-width;\n}\n\n@for $i from 1 through $default-columns {\n  .#{$default-class-prefix}#{$default-start-class}-#{$i} {\n    grid-column-start: $i;\n  }\n  .#{$default-class-prefix}#{$default-span-class}-#{$i} {\n    --#{$default-columns-property}: #{$i};\n    grid-column-end: span $i;\n  }\n}\n@for $i from 1 through $md-columns {\n  @include mixins.media($from:$sm-md) {\n    .#{$md-class-prefix}#{$default-start-class}-#{$i} {\n      grid-column-start: $i;\n    }\n    .#{$md-class-prefix}#{$default-span-class}-#{$i} {\n      --#{$default-columns-property}: #{$i};\n      grid-column-end: span $i;\n    }\n  }\n}\n\n","@use \"sass:map\";\n\n$nuances-prefixes: (\n  \"nuance1\": \"\",\n  \"nuance2\": \"hard\",\n  \"nuance3\": \"soft\",\n  \"nuance4\": \"on\"\n);\n\n/* 1 - Palette transforms\n *\n * These functions compute the derived hard and soft nuances from the base color\n * i\n */\n\n$contrast-using-dark-text:#ffffff !default;\n$contrast-using-light-text:#000000 !default;\n\n$light-nuance-lighten-by:11% !default;\n$light-nuance-desaturate-by:9% !default;\n$dark-nuance-darken-by:11% !default;\n$dark-nuance-saturate-by:9% !default;\n$treshold-contrast-nuance:0.69;\n\n@function dark-nuance(\n  $color,\n  $darken-by:$dark-nuance-darken-by,\n  $saturate-by:$dark-nuance-saturate-by,\n) {\n  @return saturate(darken($color, $darken-by), $saturate-by);\n}\n\n@function light-nuance(\n  $color,\n  $lighten-by:$light-nuance-lighten-by,\n  $desaturate-by:$light-nuance-desaturate-by,\n) {\n  @return desaturate(lighten($color, $lighten-by), $desaturate-by);\n}\n\n@function contrast-nuance($color, $dark-text:$contrast-using-dark-text, $light-text:$contrast-using-light-text) {\n  $count:red($color) + green($color) + blue($color);\n  $max:256 * 3 * $treshold-contrast-nuance;\n  @if $count < $max {\n    @return $light-text;\n  }\n  @else {\n    @return $dark-text;\n  }\n}\n\n\n//\n//\n// 2 / Setters and Getters factories\n//\n//\n\n\n// Change how the setters and getters are called\n$prefix-hover:\"h\" !default;\n//$prefixes-setters:\"x\", \"y\", \"z\" !default;\n$prefixes-setters:\"\" !default;\n//$registry-length:5 !default;\n\n$getter-background:\"b-\" !default;\n$getter-color-stroke:\"c-\" !default;\n$getter-border:\"d-\" !default;\n$getter-fill:\"e-\" !default;\n\n/*! from alphabet-scss */\n@mixin getter-factory($prefix,$var-name,$properties) {\n  .#{$prefix}#{$var-name} {\n    @each $property in $properties {\n      #{$property}: var(--#{$var-name});\n    }\n  }\n}\n\n\n@mixin define-variables($array, $nuances-names: $nuances-prefixes) {\n  @each $name, $colorlist in $array {\n    $nuance1:nth($colorlist, 1); // normal\n    $nuance2:nth($colorlist, 2); // hard\n    $nuance3:nth($colorlist, 3); // soft\n    $nuance4:nth($colorlist, 4); // contrast\n\n    --#{$name}: #{$nuance1};\n    --#{map.get($nuances-names, \"nuance2\")}-#{$name}: #{if($nuance2, $nuance2, dark-nuance($nuance1))};\n    --#{map.get($nuances-names, \"nuance3\")}-#{$name}: #{if($nuance3, $nuance3, light-nuance($nuance1))};\n    --#{map.get($nuances-names, \"nuance4\")}-#{$name}: #{if($nuance4, $nuance4, contrast-nuance($nuance1))};\n  }\n}\n\n@mixin define-theme-payload($array, $prefixes, $extras) {\n  @include define-variables($array, $prefixes);\n  @if ($extras) {\n    @each $key, $value in $extras {\n      --#{$key}: #{$value};\n    }\n  }\n}\n\n@mixin define-theme($array, $theme-name, $default:false, $extras:null, $nuances-names: null) {\n  $prefixes: if($nuances-names, $nuances-names, $nuances-prefixes);\n  @if $default == true {\n    :root,\n    .#{$theme-name} {\n      @include define-theme-payload($array, $prefixes, $extras);\n    }\n  }\n  @else {\n    .#{$theme-name} {\n      @include define-theme-payload($array, $prefixes, $extras);\n    }\n  }\n}\n\n\n//\n//Setters\n//\n//\n\n\n@mixin setters-from-map($array, $nuances-names: $nuances-prefixes) {\n  @each $name, $colorlist in $array {\n\n    .#{$name},\n    .#{$prefix-hover}-#{$name}:focus,\n    .#{$prefix-hover}-#{$name}:hover {\n      --color: var(--#{$name});\n      --#{map.get($nuances-names, \"nuance2\")}-color: var(--#{map.get($nuances-names, \"nuance2\")}-#{$name});\n      --#{map.get($nuances-names, \"nuance3\")}-color: var(--#{map.get($nuances-names, \"nuance3\")}-#{$name});\n      --#{map.get($nuances-names, \"nuance4\")}-color: var(--#{map.get($nuances-names, \"nuance4\")}-#{$name});\n    }\n  }\n}\n\n//\n//Getters\n//\n//\n//\n\n@mixin install-getters($nuances-names: $nuances-prefixes) {\n  // $variants:\"\",\"light\",\"dark\",\"on\";\n  $variants: $nuances-names;\n  @each $register in $prefixes-setters {\n    @each $name, $variant in $variants {\n      @if $variant == \"\" {\n        @include getter-factory($getter-background,$register,(\"background\"));\n        @include getter-factory($getter-color-stroke, $register,(\"color\", \"stroke\"));\n        @include getter-factory($getter-border,$register,(\"border-color\"));\n        @include getter-factory($getter-fill,$register,(\"fill\"));\n      }\n      @else {\n        $v:\"#{$variant}-#{$register}\";//\"\n\n        @include getter-factory($getter-background,$v,(\"background\"));\n        @include getter-factory($getter-color-stroke, $v,(\"color\", \"stroke\"));\n        @include getter-factory($getter-fill,$v,(\"fill\"));\n      }\n    }\n  }\n}\n\n"],"names":[],"sourceRoot":""}
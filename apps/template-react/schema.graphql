type Query {
  """Authenticated greeting"""
  authHello: String

  """The current time"""
  time: DateTime
  viewer: UserNode

  """Retrieve OAuth2 authentication URLs for various providers"""
  oAuth2Links(
    """Resource identifier for the OAuth2 provider"""
    resource: String!

    """Additional state payload for OAuth2 authentication"""
    additionalStatePayload: String
  ): OAuth2LinksProvider
}

"""
The `DateTime` scalar type represents a DateTime
value as specified by
[iso8601](https://en.wikipedia.org/wiki/ISO_8601).
"""
scalar DateTime

type UserNode implements Node {
  lastLogin: DateTime

  """
  Designates that this user has all permissions without explicitly assigning them.
  """
  isSuperuser: Boolean!

  """
  The groups this user belongs to. A user will get all permissions granted to each of their groups.
  """
  groups(offset: Int, before: String, after: String, first: Int, last: Int, name: String): GroupNodeConnection!

  """Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only."""
  username: String!
  firstName: String!
  lastName: String!
  email: String!

  """Designates whether the user can log into this admin site."""
  isStaff: Boolean!

  """
  Designates whether this user should be treated as active. Unselect this instead of deleting accounts.
  """
  isActive: Boolean!
  dateJoined: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!

  """The ID of the object"""
  id: ID!
  profilePicture: String
}

"""An object with an ID"""
interface Node {
  """The ID of the object"""
  id: ID!
}

type GroupNodeConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [GroupNodeEdge]!
}

"""
The Relay compliant `PageInfo` type, containing data necessary to paginate this connection.
"""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""A Relay edge containing a `GroupNode` and its cursor."""
type GroupNodeEdge {
  """The item at the end of the edge"""
  node: GroupNode

  """A cursor for use in pagination"""
  cursor: String!
}

type GroupNode implements Node {
  """The ID of the object"""
  id: ID!
  name: String!

  """
  The groups this user belongs to. A user will get all permissions granted to each of their groups.
  """
  userSet(offset: Int, before: String, after: String, first: Int, last: Int, firstName: String, firstName_Icontains: String, lastName: String, lastName_Icontains: String, email: String, email_Icontains: String, username: String, username_Icontains: String, createdAt_Gte: DateTime, createdAt_Gt: DateTime, createdAt_Lte: DateTime, createdAt_Lt: DateTime): UserNodeConnection!
}

type UserNodeConnection {
  """Pagination data for this connection."""
  pageInfo: PageInfo!

  """Contains the nodes in this connection."""
  edges: [UserNodeEdge]!
}

"""A Relay edge containing a `UserNode` and its cursor."""
type UserNodeEdge {
  """The item at the end of the edge"""
  node: UserNode

  """A cursor for use in pagination"""
  cursor: String!
}

"""
GraphQL ObjectType for OAuth2LinksProvider.

Utilizes OAuth2LinksProviderMetaclass for dynamic field generation. Each field represents
an OAuth2 provider's authentication link.
"""
type OAuth2LinksProvider {
  """Login link for google authentication"""
  google: String!
}

type Mutation {
  """The current time"""
  time: DateTime
}
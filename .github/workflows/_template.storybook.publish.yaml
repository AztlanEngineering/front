name: _template.apps.compile

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
    secrets:
      PROJECT_TOKEN:
        required: true
        
jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    strategy:
      matrix:
        node-version: [19.6]

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache
      id: cache-modules
      uses: actions/cache@v1
      with:
        path: ./node_modules
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: |
        npm ci
      
    #- name: Lint SCSS
    #  run: npm run test:stylelint

    #- name: Test with Storyshots (Take Snapshots -> Compare)
    #  run: npm run test:jest

    #- name: Test with Eslint
    #  run: npm run test:eslint


  publish:
    needs: test
    runs-on: ubuntu-latest
    #env:
    #  GRAPHQL_ENDPOINT: ${{ inputs.GRAPHQL_ENDPOINT }} 
    steps:
    - uses: actions/checkout@v1

    - id: cache-modules
      uses: actions/cache@v1
      with:
        path: ./node_modules
        key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: |
        npm install

    - name: Link
      run: npm link

    - name: LINK
      run: |
        cd ${{ inputs.working-directory }} && npm link @aztlan/react-hooks

    - name: I2
      run: |
        cd ${{ inputs.working-directory }} && npm install

    - name: Publish to Chromatic
      uses: chromaui/action@v1
      # Chromatic GitHub Action options
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        # ðŸ‘‡ Chromatic projectToken, refer to the manage page to obtain it.
        projectToken: ${{ secrets.PROJECT_TOKEN }}
        exitZeroOnChanges: true # ðŸ‘ˆ Option to prevent the workflow from failing, in case there are changes (but no errors)
        workingDir: ${{ inputs.working-directory }}
